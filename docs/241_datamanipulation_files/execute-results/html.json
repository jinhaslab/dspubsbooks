{
  "hash": "3ccf2a06a039610039cb3e91ebcd3067",
  "result": {
    "markdown": "# Data Manipulation\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/dTKrAXXmqrw?si=1Lq35jP_6Toyo918\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n\n## dplyr (tidyverse)\n 데이터를 모으는 입장과 데이터를 분석하는 입장은 매우 다릅니다. 데이터를 모을 때는 모으는 연구자의 입장에서 하게되고, 이를 분석하는 연구자에 맞도록 변형하는 과정이 필요합니다. 또한 표를 만들거나 도표를 만드는 과정에서 데이터의 모양을 우리가 원하는 데로 변형할 필요가 있습니다. R에서 이과정을 쉽게 하기 위해 가장 많이 사용되는 것이 dplyr (tidyverse) 입니다. 이를 이용해서 실습해 보겠습니다 \n \n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif(!require(\"htmlTable\")) install.packages(\"htmlTable\")\nif(!require(\"haven\")) install.packages(\"haven\")\nif(!require(\"DT\")) install.packages(\"DT\")\n```\n:::\n\n\n\n## 실습 데이터 준비\n 데이터 표를 만드는 실습은 6차 근로환경조사 자료를 통해 실습할 것입니다.. 자료는 안전보건공단, 근로환경조사 원시자료 사이트 (http://kosha.or.kr/kosha/data/primitiveData.do) 에서 신청할 수 있습니다.. \n 데이터를 불러오겠습니다. 안전보건공단 홈페이에서 자료를 다운 받는게 원칙입니다. 다만 실습을 빠르게 진행하기 위해서, dspubs.org 페이지에 있는 파일을 이용하겠습니다. <br>\n <a href=\"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/kwcsData6th.rds\"> kwcsData6th.rds </a>\n<br>\n 자신의 folder에 data 라는 folder가 있는지 확인하십시오. data라는 폴더에 다운로드하고, 불러오도록 하겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/kwcsData6th.rds\"\ndownload.file(url, \"data/tutorKWCS.rds\")\nkwcs = readRDS(\"data/tutorKWCS.rds\")\n```\n:::\n\n\n\n데이터 10개만 살펴보겠습니다. 이때 head()는 처음 10개, tail() 은 뒤에 10개, slice(5:15) 은 5번째부터 15번째 까지 입니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% head() %>% DT::datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-457660805db31cde45ce\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-457660805db31cde45ce\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[2,3,6,8,9,10],[0.13726262,0.350073833,0.156242513,0.227703402,0.167653177,0.675384949],[3,3,7,7,7,6],[1,1,1,3,1,4],[2,2,2,1,1,2],[1966,1956,1955,1962,1982,1973],[1,1,2,3,1,1],[0,0,0,1,0,0],[null,null,null,2,null,1],[null,null,null,1963,null,1969],[null,null,null,1,null,1],[null,null,null,0,null,1],[null,null,null,1,null,2],[null,null,null,1992,null,1993],[null,null,null,5,null,3],[null,null,null,2,null,2],[null,null,null,null,null,1],[null,null,null,null,null,1995],[null,null,null,null,null,5],[null,null,null,null,null,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,1,1,2,1,1],[1966,1956,1955,1963,1982,1973],[1,1,2,1,1,1],[54,64,65,57,38,47],[1,1,1,1,1,1],[\"\",\"\",\"\",\"\",\"\",\"\"],[1,1,1,1,1,1],[null,null,null,null,null,null],[null,null,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[3,3,3,1,3,3],[null,null,null,1,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,3,1,null,1,1],[1,2,2,null,2,1],[5,null,null,null,null,1],[5,null,null,null,null,0],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,null,null,null,null,2],[null,2,2,null,2,null],[1,null,1,null,1,1],[2,null,1,null,1,3],[\"\",\"\",\"\",\"\",\"\",\"\"],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[1,2,1,null,1,1],[2,1,1,null,1,1],[2,2,2,null,2,1],[2,2,2,null,2,2],[null,null,null,1,null,null],[null,null,null,2,null,null],[null,null,null,2,null,null],[null,null,null,2,null,null],[null,null,null,2,null,null],[null,null,null,1,null,null],[1,1,1,2,2,1],[1,1,1,null,null,1],[8,5,8,null,null,8],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,1,3,null],[1,1,1,1,1,1],[5,2,5,6,6,5],[null,null,null,null,null,null],[1,1,1,1,1,1],[40,10,40,52,48,40],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[120,60,30,10,null,40],[null,null,null,null,1,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,1,1,1,null,1],[null,15,30,40,null,40],[null,null,null,null,null,null],[2,1,1,1,4,1],[\"\",\"\",\"\",\"\",\"\",\"\"],[1,1,1,1,1,1],[2,1,5,1,2,4],[0,0,0,0,0,0],[null,null,null,null,null,null],[5,null,3,null,3,4],[2,null,1,null,3,2],[0,0,1,0,0,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,1,0,1,1,0],[10,30,0,7,10,0],[3,3,null,5,3,3],[2,2,null,2,2,2],[2,2,null,1,2,2],[2,2,null,2,2,2],[2,2,null,2,2,2],[2,2,null,2,2,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,6,6,7,7],[7,6,5,6,7,7],[6,3,2,1,7,5],[6,6,3,7,7,7],[6,3,3,7,7,6],[2,2,6,1,7,5],[6,2,1,7,7,4],[3,2,1,2,7,6],[6,2,6,7,7,5],[6,2,6,7,7,6],[6,2,6,7,7,6],[2,4,2,null,null,1],[4,null,6,null,4,5],[4,null,6,null,null,6],[6,null,6,null,null,null],[2,1,2,1,1,2],[2,1,2,1,5,2],[5,5,5,5,5,5],[5,5,5,5,5,5],[null,null,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[2,2,2,2,1,2],[4,4,4,4,4,4],[0,0,0,0,0,0],[0,1,0,1,1,0],[0,1,0,1,1,0],[0,0,0,1,0,0],[null,null,null,null,null,null],[null,2,null,4,4,null],[null,1,null,4,4,null],[null,null,null,26,null,null],[2,2,2,1,1,2],[1,1,2,1,2,1],[1,2,1,1,2,1],[1,2,1,1,2,1],[1,2,1,1,2,1],[2,2,2,2,2,2],[null,null,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[null,null,5,5,null,5],[1,2,1,4,2,1],[2,1,2,null,2,2],[null,2,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[1,1,2,3,2,2],[5,4,4,5,5,5],[4,3,4,5,5,4],[5,3,4,5,5,4],[5,4,4,5,5,5],[5,4,4,5,5,5],[null,null,4,5,1,5],[5,5,4,1,1,5],[4,4,3,4,2,2],[1,1,2,2,2,2],[1,1,2,2,2,2],[3,3,3,2,7,6],[2,1,3,2,7,6],[2,null,1,null,2,2],[2,2,2,1,2,2],[2,2,1,null,2,2],[2,2,1,null,2,2],[2,1,1,null,2,2],[4,4,4,3,4,4],[null,null,null,1,null,null],[2,2,2,2,2,2],[2,1,1,2,1,2],[2,2,2,2,2,2],[1,1,1,1,1,1],[2,2,2,2,2,2],[1,2,2,2,1,2],[1,1,2,2,1,1],[1,1,2,2,1,2],[1,1,2,2,1,2],[4,1,2,null,2,2],[4,1,4,4,2,2],[4,4,4,4,2,3],[1,2,2,2,2,1],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,4],[null,null,null,null,null,5],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[2,2,2,2,1,2],[2,2,2,2,2,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,2,null,2,1],[null,null,2,null,2,1],[null,null,2,null,2,2],[null,null,3,null,2,4],[null,null,3,null,2,3],[4,3,5,3,2,3],[1,3,3,3,2,2],[1,3,3,3,1,2],[1,3,3,3,1,3],[1,3,3,3,1,2],[1,3,3,3,1,2],[1,4,3,2,4,4],[3,4,3,3,1,2],[3,3,2,3,3,3],[1,1,1,2,null,2],[2,1,1,null,2,2],[2,1,1,null,2,2],[null,1,3,null,null,null],[null,1,2,null,null,null],[2,null,1,null,1,2],[1,null,3,null,1,1],[1,null,3,null,1,1],[1,null,3,null,1,1],[1,null,3,null,1,1],[1,null,3,null,1,1],[1,2,2,2,1,2],[1,2,1,null,1,2],[2,2,2,2,2,2],[2,2,1,2,2,2],[1,null,4,null,3,null],[null,null,null,null,null,null],[1,null,3,null,2,null],[null,2,null,null,null,2],[1,null,2,null,2,2],[1,null,2,null,2,2],[1,null,3,null,2,2],[null,null,3,null,2,2],[1,null,3,null,2,2],[1,null,2,null,2,2],[2,null,2,null,2,2],[2,null,2,null,2,2],[2,null,1,null,1,2],[3,3,3,null,3,3],[2,2,2,2,2,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[1,3,3,3,1,1],[1,2,4,4,1,2],[2,2,2,1,2,2],[3,3,3,2,3,3],[null,null,null,1,null,null],[null,null,null,3,null,null],[2,2,2,1,2,2],[2,2,1,1,2,2],[2,2,1,1,2,2],[1,1,1,1,2,2],[2,2,2,2,2,2],[1,1,1,2,2,2],[null,null,null,null,null,null],[\"\",\"\",\"\",\"\",\"\",\"\"],[null,null,null,1,null,null],[null,null,2,1,null,null],[null,null,1,2,null,null],[1,1,1,2,null,null],[null,null,null,null,null,null],[1,2,1,null,null,null],[null,null,null,null,null,null],[5,2,5,3,5,5],[5,2,5,4,5,4],[5,2,5,4,5,5],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[2,2,2,2,2,2],[2,2,2,2,2,2],[2,2,2,2,2,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[0,0,0,0,0,0],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[2,2,2,2,2,2],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,5,5,3,1,2],[1,5,5,3,1,2],[1,5,5,4,1,2],[2,5,5,3,1,3],[3,5,5,3,1,3],[2,2,2,1,1,2],[2,3,3,2,1,2],[2,4,2,4,1,2],[2,3,2,3,1,2],[null,3,2,2,5,4],[null,3,2,3,3,2],[null,4,2,5,5,5],[2,5,2,5,null,2],[2,3,3,3,2,2],[2,3,2,3,2,2],[2,3,2,3,2,2],[2,3,2,3,4,4],[3,4,2,3,4,4],[null,null,null,4,null,null],[null,null,null,3,null,null],[null,null,null,1,null,null],[null,null,null,1,null,null],[3,4,3,4,4,3],[3,4,3,4,4,3],[3,4,3,2,4,3],[3,4,3,4,3,3],[3,4,3,4,3,3],[60,70,70,65,null,null],[null,null,null,null,1,1],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,null,null,null,1,null],[null,1,1,1,null,null],[5,5,null,5,null,5],[5,5,null,5,null,5],[1,1,1,1,2,1],[1,1,5,5,1,2],[5,5,5,5,1,5],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,3,1,3,null,2],[30,0,20,10,null,0],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,1,null,null,1,null],[0,0,null,null,10,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,8,null],[null,null,null,null,20,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[1,1,1,1,1,3],[2,4,2,6,1,3],[1,2,1,null,1,1],[2,1,2,null,2,2],[2,2,2,null,2,2],[2,2,2,null,2,2],[2,2,2,null,2,2],[2,2,2,null,2,2],[2,2,2,null,2,2],[2,2,1,null,2,2],[2,2,2,null,2,2],[2,2,2,null,2,2],[null,3,null,null,null,null],[null,null,null,3,null,null],[200,100,100,150,150,250],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[200,100,100,150,150,250],[6,4,2,4,7,4],[2,2,1,2,2,2],[2,2,2,2,1,2],[5,6,6,5,3,4],[3,3,7,7,7,6],[1,1,1,1,1,1],[3,3,3,1,3,3],[2,4,2,1,2,2],[4,9,8,4,2,5],[\"421\",\"951\",\"854\",\"441\",\"248\",\"510\"],[16,20,3,9,19,7],[\"85\",\"97\",\"30\",\"56\",\"94\",\"47\"],[2,1,5,1,2,4],[2,1,3,1,2,3],[1,1,1,1,1,1],[2,1,5,1,2,4],[40,10,40,52,48,40],[3,1,3,3,3,3],[4,1,4,5,4,4],[4,3,1,3,4,3],[2,1,1,1,1,2],[6,6,1,5,6,1],[0,3,0,2,0,0],[0,3,0,1,0,1],[0,3,0,1,0,0],[\"0.non distrubance\",\"1.sleep disturbance\",\"0.non distrubance\",\"0.non distrubance\",\"0.non distrubance\",\"0.non distrubance\"],[\"0.balance\",\"0.balance\",\"0.balance\",\"1.non balance\",\"0.balance\",\"0.balance\"],[\"0.Never\",\"1.Rarely\",\"1.Rarely\",\"0.Never\",\"0.Never\",\"0.Never\"],[\"1.Rarely\",\"2.Sometimes\",\"1.Rarely\",\"0.Never\",\"0.Never\",\"1.Rarely\"],[\"0.Never\",\"2.Sometimes\",\"1.Rarely\",\"0.Never\",\"0.Never\",\"1.Rarely\"],[\"0.Never\",\"1.Rarely\",\"1.Rarely\",\"0.Never\",\"0.Never\",\"0.Never\"],[\"0.Never\",\"1.Rarely\",\"1.Rarely\",\"0.Never\",\"0.Never\",\"0.Never\"],[\"Women\",\"Women\",\"Women\",\"Women\",\"Men\",\"Women\"],[\"&lt;55\",\"≥60\",\"≥60\",\"&lt;60\",\"&lt;40\",\"&lt;50\"],[\"0.university or more\",\"1.high school\",\"2.middle school or below\",\"1.high school\",\"0.university or more\",\"1.high school\"],[\"0.one-job\",\"0.one-job\",\"0.one-job\",\"0.one-job\",\"0.one-job\",\"0.one-job\"],[\"no-pain\",\"no-pain\",\"no-pain\",\"pain\",\"no-pain\",\"no-pain\"],[\"0.paid-worker\",\"0.paid-worker\",\"0.paid-worker\",\"2.own-account worker\",\"0.paid-worker\",\"0.paid-worker\"],[\"&lt;52\",\"&lt;35\",\"&lt;52\",\"&lt;60\",\"&lt;52\",\"&lt;52\"],[\"0.non shift work\",\"0.non shift work\",\"0.non shift work\",\"0.non shift work\",\"0.non shift work\",\"0.non shift work\"],[\"0.non short return\",\"0.non short return\",\"0.non short return\",\"1.short return\",\"1.short return\",\"0.non short return\"],[3,3,3,4,4,3],[\"0.day work\",\"0.day work\",\"0.day work\",\"1.day work with short return\",\"1.day work with short return\",\"0.day work\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>id<\\/th>\\n      <th>wt<\\/th>\\n      <th>area<\\/th>\\n      <th>hh_num<\\/th>\\n      <th>hm_01_gender<\\/th>\\n      <th>hm_01_year<\\/th>\\n      <th>hm_01_estat<\\/th>\\n      <th>hm_01_rel_t<\\/th>\\n      <th>hm_02_gender<\\/th>\\n      <th>hm_02_year<\\/th>\\n      <th>hm_02_estat<\\/th>\\n      <th>hm_02_rel_t<\\/th>\\n      <th>hm_03_gender<\\/th>\\n      <th>hm_03_year<\\/th>\\n      <th>hm_03_estat<\\/th>\\n      <th>hm_03_rel_t<\\/th>\\n      <th>hm_04_gender<\\/th>\\n      <th>hm_04_year<\\/th>\\n      <th>hm_04_estat<\\/th>\\n      <th>hm_04_rel_t<\\/th>\\n      <th>hm_05_gender<\\/th>\\n      <th>hm_05_year<\\/th>\\n      <th>hm_05_estat<\\/th>\\n      <th>hm_05_rel_t<\\/th>\\n      <th>hm_06_gender<\\/th>\\n      <th>hm_06_year<\\/th>\\n      <th>hm_06_estat<\\/th>\\n      <th>hm_06_rel_t<\\/th>\\n      <th>hm_07_gender<\\/th>\\n      <th>hm_07_year<\\/th>\\n      <th>hm_07_estat<\\/th>\\n      <th>hm_07_rel_t<\\/th>\\n      <th>hm_08_gender<\\/th>\\n      <th>hm_08_year<\\/th>\\n      <th>hm_08_estat<\\/th>\\n      <th>hm_08_rel_t<\\/th>\\n      <th>hm_09_gender<\\/th>\\n      <th>hm_09_year<\\/th>\\n      <th>hm_09_estat<\\/th>\\n      <th>hm_09_rel_t<\\/th>\\n      <th>hm_10_gender<\\/th>\\n      <th>hm_10_year<\\/th>\\n      <th>hm_10_estat<\\/th>\\n      <th>hm_10_rel_t<\\/th>\\n      <th>target<\\/th>\\n      <th>YEAR<\\/th>\\n      <th>ESTAT<\\/th>\\n      <th>AGE<\\/th>\\n      <th>country<\\/th>\\n      <th>country_etc<\\/th>\\n      <th>job1<\\/th>\\n      <th>job2<\\/th>\\n      <th>job3<\\/th>\\n      <th>job3_etc<\\/th>\\n      <th>emp_type<\\/th>\\n      <th>selfemp_cate1<\\/th>\\n      <th>selfemp_cate2<\\/th>\\n      <th>selfemp_cate3<\\/th>\\n      <th>selfemp_cate4<\\/th>\\n      <th>selfemp_cate5<\\/th>\\n      <th>selfemp_cate6<\\/th>\\n      <th>selfemp_cate7<\\/th>\\n      <th>selfemp_cate8<\\/th>\\n      <th>emp_stat<\\/th>\\n      <th>emp_con_term<\\/th>\\n      <th>emp_con_period_y<\\/th>\\n      <th>emp_con_period_m<\\/th>\\n      <th>emp_con_period_77<\\/th>\\n      <th>emp_con_period_88<\\/th>\\n      <th>emp_con_period_99<\\/th>\\n      <th>emp_con_renew<\\/th>\\n      <th>emp_noncon<\\/th>\\n      <th>emp_keep<\\/th>\\n      <th>emp_keep2<\\/th>\\n      <th>emp_keep2_etc<\\/th>\\n      <th>emp_expect<\\/th>\\n      <th>emp_expect_mon<\\/th>\\n      <th>emp_expect2<\\/th>\\n      <th>emp_expect2_etc<\\/th>\\n      <th>emp_fptime<\\/th>\\n      <th>emp_wage<\\/th>\\n      <th>emp_stat_sp<\\/th>\\n      <th>emp_place<\\/th>\\n      <th>selfemp_re1<\\/th>\\n      <th>selfemp_re2<\\/th>\\n      <th>selfemp_re3<\\/th>\\n      <th>selfemp_re4<\\/th>\\n      <th>selfemp_re5<\\/th>\\n      <th>selfemp_be<\\/th>\\n      <th>wtime_con1<\\/th>\\n      <th>wtime_con2<\\/th>\\n      <th>wtime_con2_day<\\/th>\\n      <th>wtime_con2_week<\\/th>\\n      <th>wtime_con2_month<\\/th>\\n      <th>wtime_con3<\\/th>\\n      <th>wday<\\/th>\\n      <th>wday_week<\\/th>\\n      <th>wday_month<\\/th>\\n      <th>wtime<\\/th>\\n      <th>wtime_week<\\/th>\\n      <th>wtime_month<\\/th>\\n      <th>wtime2<\\/th>\\n      <th>wtime2_week<\\/th>\\n      <th>wtime2_month<\\/th>\\n      <th>ctime<\\/th>\\n      <th>ctime_777<\\/th>\\n      <th>ctime_888<\\/th>\\n      <th>ctime_999<\\/th>\\n      <th>ptime<\\/th>\\n      <th>ptime_week<\\/th>\\n      <th>ptime_month<\\/th>\\n      <th>wsector<\\/th>\\n      <th>wsector_etc<\\/th>\\n      <th>comp_size1<\\/th>\\n      <th>comp_size2<\\/th>\\n      <th>comp_size3<\\/th>\\n      <th>comp_size4<\\/th>\\n      <th>comp_female<\\/th>\\n      <th>comp_sjob<\\/th>\\n      <th>comp_emp<\\/th>\\n      <th>comp_emp_8888888<\\/th>\\n      <th>comp_emp_9999999<\\/th>\\n      <th>wduration<\\/th>\\n      <th>wduration_y<\\/th>\\n      <th>ch_downsizing<\\/th>\\n      <th>ch_tech<\\/th>\\n      <th>ch_restruct<\\/th>\\n      <th>ch_ic<\\/th>\\n      <th>ch_me<\\/th>\\n      <th>ch_ps<\\/th>\\n      <th>ch_ic_a<\\/th>\\n      <th>ch_me_a<\\/th>\\n      <th>ch_ps_a<\\/th>\\n      <th>hazard_phy1<\\/th>\\n      <th>hazard_phy2<\\/th>\\n      <th>hazard_phy3<\\/th>\\n      <th>hazard_phy4<\\/th>\\n      <th>hazard_phy5<\\/th>\\n      <th>hazard_phy6<\\/th>\\n      <th>hazard_phy7<\\/th>\\n      <th>hazard_phy8<\\/th>\\n      <th>hazard_phy9<\\/th>\\n      <th>hazard_erg1<\\/th>\\n      <th>hazard_erg2<\\/th>\\n      <th>hazard_erg3<\\/th>\\n      <th>hazard_erg4<\\/th>\\n      <th>hazard_erg5<\\/th>\\n      <th>hazard_erg6<\\/th>\\n      <th>hazard_psy1<\\/th>\\n      <th>hazard_psy2<\\/th>\\n      <th>hazard_psy3<\\/th>\\n      <th>safeinform<\\/th>\\n      <th>useequip1<\\/th>\\n      <th>useequip2<\\/th>\\n      <th>useequip3<\\/th>\\n      <th>wplace1<\\/th>\\n      <th>wplace2<\\/th>\\n      <th>wplace3<\\/th>\\n      <th>wplace4<\\/th>\\n      <th>wplace5<\\/th>\\n      <th>wplace5_etc<\\/th>\\n      <th>wplace_sl<\\/th>\\n      <th>wpalce_ch<\\/th>\\n      <th>wtime_night_a<\\/th>\\n      <th>wtime_sun_a<\\/th>\\n      <th>wtime_sat_a<\\/th>\\n      <th>wtime_long_a<\\/th>\\n      <th>wtime_night<\\/th>\\n      <th>wtime_sun<\\/th>\\n      <th>wtime_sat<\\/th>\\n      <th>wtime_long<\\/th>\\n      <th>wtime_resilience<\\/th>\\n      <th>wtime_length1<\\/th>\\n      <th>wtime_length2<\\/th>\\n      <th>wtime_length3<\\/th>\\n      <th>wtime_length4<\\/th>\\n      <th>wtime_length5<\\/th>\\n      <th>wshift<\\/th>\\n      <th>wshift_etc<\\/th>\\n      <th>wcomback<\\/th>\\n      <th>wtime_arr1<\\/th>\\n      <th>wtime_arr2<\\/th>\\n      <th>wtime_arr3<\\/th>\\n      <th>wtime_arr3_etc<\\/th>\\n      <th>wbalance<\\/th>\\n      <th>wwa1<\\/th>\\n      <th>wwa2<\\/th>\\n      <th>wwa3<\\/th>\\n      <th>wwa4<\\/th>\\n      <th>wwa5<\\/th>\\n      <th>wtime_ftwork<\\/th>\\n      <th>wtime_ftcomtool<\\/th>\\n      <th>wtime_private<\\/th>\\n      <th>winten1_1<\\/th>\\n      <th>winten1_2<\\/th>\\n      <th>winten2_1<\\/th>\\n      <th>winten2_2<\\/th>\\n      <th>winten3_1<\\/th>\\n      <th>winten3_2<\\/th>\\n      <th>winten3_3<\\/th>\\n      <th>winten3_4<\\/th>\\n      <th>winten3_5<\\/th>\\n      <th>winterrupt1<\\/th>\\n      <th>winterrupt2<\\/th>\\n      <th>condim1<\\/th>\\n      <th>condim2<\\/th>\\n      <th>condim3<\\/th>\\n      <th>condim4<\\/th>\\n      <th>condim5<\\/th>\\n      <th>condim6<\\/th>\\n      <th>decla1<\\/th>\\n      <th>decla2<\\/th>\\n      <th>decla3<\\/th>\\n      <th>winflu1<\\/th>\\n      <th>winflu2<\\/th>\\n      <th>winflu3<\\/th>\\n      <th>ass_cust1<\\/th>\\n      <th>ass_cust2_1<\\/th>\\n      <th>ass_cust2_2<\\/th>\\n      <th>ass_cust2_3<\\/th>\\n      <th>ass_cust2_4<\\/th>\\n      <th>ass_cust2_5<\\/th>\\n      <th>ass_cust2_6<\\/th>\\n      <th>ass_cust2_7<\\/th>\\n      <th>ass_cust2_8<\\/th>\\n      <th>ass_cust2_9<\\/th>\\n      <th>ass_cust2_etc<\\/th>\\n      <th>alter_task1<\\/th>\\n      <th>wteam1<\\/th>\\n      <th>wteam2<\\/th>\\n      <th>wteam3_1<\\/th>\\n      <th>wteam3_2<\\/th>\\n      <th>wteam3_3<\\/th>\\n      <th>wsituation1<\\/th>\\n      <th>wsituation2<\\/th>\\n      <th>wsituation3<\\/th>\\n      <th>wsituation4<\\/th>\\n      <th>wsituation5<\\/th>\\n      <th>wsituation6<\\/th>\\n      <th>wsituation7<\\/th>\\n      <th>wsituation8<\\/th>\\n      <th>wsituation9<\\/th>\\n      <th>wsituation10<\\/th>\\n      <th>wsituation11<\\/th>\\n      <th>wsituation12<\\/th>\\n      <th>wsituation13<\\/th>\\n      <th>wsituation14<\\/th>\\n      <th>emo_manual<\\/th>\\n      <th>suggest1<\\/th>\\n      <th>suggest2<\\/th>\\n      <th>suggest1_1<\\/th>\\n      <th>suggest2_1<\\/th>\\n      <th>boss_gender<\\/th>\\n      <th>manaqual1<\\/th>\\n      <th>manaqual2<\\/th>\\n      <th>manaqual3<\\/th>\\n      <th>manaqual4<\\/th>\\n      <th>manaqual5<\\/th>\\n      <th>skillmat<\\/th>\\n      <th>tra1<\\/th>\\n      <th>tra2<\\/th>\\n      <th>tra3<\\/th>\\n      <th>tra1_1<\\/th>\\n      <th>tra2_1<\\/th>\\n      <th>tra_ass1<\\/th>\\n      <th>tra_ask<\\/th>\\n      <th>comp_ass1<\\/th>\\n      <th>comp_ass2<\\/th>\\n      <th>comp_ass3<\\/th>\\n      <th>comp_ass4<\\/th>\\n      <th>comp_ass5<\\/th>\\n      <th>comp_ass6<\\/th>\\n      <th>comp_com1<\\/th>\\n      <th>comp_com2<\\/th>\\n      <th>comp_com3<\\/th>\\n      <th>emp_rep<\\/th>\\n      <th>disc1<\\/th>\\n      <th>disc2<\\/th>\\n      <th>disc3<\\/th>\\n      <th>disc4<\\/th>\\n      <th>disc5<\\/th>\\n      <th>disc6<\\/th>\\n      <th>disc7<\\/th>\\n      <th>disc8<\\/th>\\n      <th>disc9<\\/th>\\n      <th>disc10<\\/th>\\n      <th>disc11<\\/th>\\n      <th>heal_risk<\\/th>\\n      <th>heal_aff<\\/th>\\n      <th>heal_cond<\\/th>\\n      <th>heal_illhe<\\/th>\\n      <th>heal_lim1<\\/th>\\n      <th>heal_lim2<\\/th>\\n      <th>heal_lim3<\\/th>\\n      <th>heal_prob1<\\/th>\\n      <th>heal_prob2<\\/th>\\n      <th>heal_prob3<\\/th>\\n      <th>heal_prob4<\\/th>\\n      <th>heal_prob5<\\/th>\\n      <th>heal_prob6<\\/th>\\n      <th>heal_prob7<\\/th>\\n      <th>heal_prob7_etc<\\/th>\\n      <th>heal_prob1_1<\\/th>\\n      <th>heal_prob2_1<\\/th>\\n      <th>heal_prob3_1<\\/th>\\n      <th>heal_prob4_1<\\/th>\\n      <th>heal_prob5_1<\\/th>\\n      <th>heal_prob6_1<\\/th>\\n      <th>heal_prob7_1<\\/th>\\n      <th>sleep1<\\/th>\\n      <th>sleep2<\\/th>\\n      <th>sleep3<\\/th>\\n      <th>asb1<\\/th>\\n      <th>asb2<\\/th>\\n      <th>asb3<\\/th>\\n      <th>asb4<\\/th>\\n      <th>asb1_1<\\/th>\\n      <th>asb2_1<\\/th>\\n      <th>asb3_1<\\/th>\\n      <th>asb4_1<\\/th>\\n      <th>asb5<\\/th>\\n      <th>asb6<\\/th>\\n      <th>asb7<\\/th>\\n      <th>asb5_1<\\/th>\\n      <th>asb6_1<\\/th>\\n      <th>asb7_1<\\/th>\\n      <th>heal_abs1<\\/th>\\n      <th>heal_abs1_888<\\/th>\\n      <th>heal_abs1_999<\\/th>\\n      <th>heal_abs2<\\/th>\\n      <th>heal_abs2_888<\\/th>\\n      <th>heal_abs2_999<\\/th>\\n      <th>heal_abs3<\\/th>\\n      <th>heal_abs3_888<\\/th>\\n      <th>heal_abs3_999<\\/th>\\n      <th>heal_wsick1<\\/th>\\n      <th>heal_wsick2<\\/th>\\n      <th>heal_wsick2_888<\\/th>\\n      <th>heal_wsick2_999<\\/th>\\n      <th>who1<\\/th>\\n      <th>who2<\\/th>\\n      <th>who3<\\/th>\\n      <th>who4<\\/th>\\n      <th>who5<\\/th>\\n      <th>satisfaction<\\/th>\\n      <th>wstat1<\\/th>\\n      <th>wstat2<\\/th>\\n      <th>wstat3<\\/th>\\n      <th>wstat4<\\/th>\\n      <th>wstat5<\\/th>\\n      <th>wstat6<\\/th>\\n      <th>wstat7<\\/th>\\n      <th>weng1<\\/th>\\n      <th>weng2<\\/th>\\n      <th>weng3<\\/th>\\n      <th>weng4<\\/th>\\n      <th>weng5<\\/th>\\n      <th>selfemp_sw1<\\/th>\\n      <th>selfemp_sw2<\\/th>\\n      <th>selfemp_sw3<\\/th>\\n      <th>selfemp_sw4<\\/th>\\n      <th>imte1<\\/th>\\n      <th>imte2<\\/th>\\n      <th>imte3<\\/th>\\n      <th>imte4<\\/th>\\n      <th>imte5<\\/th>\\n      <th>job_c1<\\/th>\\n      <th>job_c1_666<\\/th>\\n      <th>job_c1_888<\\/th>\\n      <th>job_c1_999<\\/th>\\n      <th>job_c2<\\/th>\\n      <th>job_c3<\\/th>\\n      <th>woutside1<\\/th>\\n      <th>woutside2<\\/th>\\n      <th>woutside3<\\/th>\\n      <th>woutside4<\\/th>\\n      <th>woutside5<\\/th>\\n      <th>woutside1_1<\\/th>\\n      <th>woutside1_2<\\/th>\\n      <th>woutside1_88<\\/th>\\n      <th>woutside1_99<\\/th>\\n      <th>woutside2_1<\\/th>\\n      <th>woutside2_2<\\/th>\\n      <th>woutside2_88<\\/th>\\n      <th>woutside2_99<\\/th>\\n      <th>woutside3_1<\\/th>\\n      <th>woutside3_2<\\/th>\\n      <th>woutside3_88<\\/th>\\n      <th>woutside3_99<\\/th>\\n      <th>woutside4_1<\\/th>\\n      <th>woutside4_2<\\/th>\\n      <th>woutside4_88<\\/th>\\n      <th>woutside4_99<\\/th>\\n      <th>woutside5_1<\\/th>\\n      <th>woutside5_2<\\/th>\\n      <th>woutside5_88<\\/th>\\n      <th>woutside5_99<\\/th>\\n      <th>income_con<\\/th>\\n      <th>income_bal<\\/th>\\n      <th>income_pos1<\\/th>\\n      <th>income_pos2<\\/th>\\n      <th>income_pos3<\\/th>\\n      <th>income_pos4<\\/th>\\n      <th>income_pos5<\\/th>\\n      <th>income_pos6<\\/th>\\n      <th>income_pos7<\\/th>\\n      <th>income_pos8<\\/th>\\n      <th>income_pos9<\\/th>\\n      <th>income_pos10<\\/th>\\n      <th>income_pred<\\/th>\\n      <th>income_client<\\/th>\\n      <th>earning1<\\/th>\\n      <th>earning1_8888<\\/th>\\n      <th>earning1_9999<\\/th>\\n      <th>earning2<\\/th>\\n      <th>earning_total<\\/th>\\n      <th>edu<\\/th>\\n      <th>post_survey<\\/th>\\n      <th>TSEX<\\/th>\\n      <th>TAGE_GROUP<\\/th>\\n      <th>TAREA<\\/th>\\n      <th>TARA_SIZE<\\/th>\\n      <th>TEMP_TYPE<\\/th>\\n      <th>TEMP_STAT<\\/th>\\n      <th>OCC<\\/th>\\n      <th>OCC2<\\/th>\\n      <th>IND<\\/th>\\n      <th>IND2<\\/th>\\n      <th>TCOMP_SIZE1<\\/th>\\n      <th>TCOMP_SIZE2<\\/th>\\n      <th>TCOMP_SIZE3<\\/th>\\n      <th>TCOMP_SIZE4<\\/th>\\n      <th>TWTIME_WEEK<\\/th>\\n      <th>TWTIME_WEEK2<\\/th>\\n      <th>TWTIME_WEEK3<\\/th>\\n      <th>TEDU<\\/th>\\n      <th>TEARNING<\\/th>\\n      <th>TWDURATION<\\/th>\\n      <th>sleep1in<\\/th>\\n      <th>sleep2in<\\/th>\\n      <th>sleep3in<\\/th>\\n      <th>sleepgp<\\/th>\\n      <th>wbalancegp<\\/th>\\n      <th>wwa1gp<\\/th>\\n      <th>wwa2gp<\\/th>\\n      <th>wwa3gp<\\/th>\\n      <th>wwa4gp<\\/th>\\n      <th>wwa5gp<\\/th>\\n      <th>sexgp<\\/th>\\n      <th>agegp<\\/th>\\n      <th>edugp<\\/th>\\n      <th>njob<\\/th>\\n      <th>backpain<\\/th>\\n      <th>empgp<\\/th>\\n      <th>whgp<\\/th>\\n      <th>shiftWork<\\/th>\\n      <th>shortReturn<\\/th>\\n      <th>satisInv<\\/th>\\n      <th>shiftShort<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,436,437,438,439,440,441,458]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n\n<br><br>\n> 설문지와 변수설명 파일은 아래와 같습니다. <br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(\"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/pdf3.pdf\", \"data/kwcs6thkorea.pdf\")\n```\n:::\n\n\n\n\n## select\n 필요한 데이터를 종으로, columns 로 분할하는 것입니다. 즉 변수명으로 데이터를 분할하는 것입니다. 선택될 변수는 변수명과 변수번호(왼쪽 부터 1번)를 이용해서 할 수 있습니다. <br>\n\n처음부터 5번째 변수까지 선택해 보겠습니다 .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% \n  select(1:5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% \n  select(id, wt, area, hh_num, hm_01_gender) \n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n     id    wt area      hh_num hm_01_gender\n  <dbl> <dbl> <dbl+lbl>  <dbl> <dbl+lbl>   \n1     2 0.137 3 [대구]       1 2 [여성]    \n2     3 0.350 3 [대구]       1 2 [여성]    \n3     6 0.156 7 [울산]       1 2 [여성]    \n4     8 0.228 7 [울산]       3 1 [남성]    \n5     9 0.168 7 [울산]       1 1 [남성]    \n6    10 0.675 6 [대전]       4 2 [여성]    \n```\n:::\n:::\n\n\n 변수명에 job이 들어 있는 경우 선택해 보겠습니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% select(contains(\"job\")) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n  job1     job2  job3  job3_…¹ comp_s…² job_c1 job_c1…³ job_c…⁴ job_c…⁵ job_c2  \n  <dbl+lb> <dbl> <dbl> <chr>   <dbl+lb> <dbl+> <dbl+lb> <dbl+l> <dbl+l> <dbl+lb>\n1 1 [1개]  NA    NA    \"\"       2 [대… 60     NA     … NA      NA       1 [그…\n2 1 [1개]  NA    NA    \"\"      NA     … 70     NA     … NA      NA      NA     …\n3 1 [1개]  NA    NA    \"\"       1 [대… 70     NA     … NA      NA      NA     …\n4 1 [1개]  NA    NA    \"\"      NA     … 65     NA     … NA      NA      NA     …\n5 1 [1개]  NA    NA    \"\"       3 [대… NA      1 [가… NA      NA       1 [그…\n6 1 [1개]  NA    NA    \"\"       2 [대… NA      1 [가… NA      NA      NA     …\n# … with 2 more variables: job_c3 <dbl+lbl>, njob <chr>, and abbreviated\n#   variable names ¹​job3_etc, ²​comp_sjob, ³​job_c1_666, ⁴​job_c1_888, ⁵​job_c1_999\n```\n:::\n:::\n\n\n select안에서는 \" \" 안에 문자가 변수 명으로 인식됩니다. 이것은 매우 중요한 개념입니다. 아래의 두 코드는 같은 결과를 줍니다. 외부에서 문자를 입력 받았어도, 바로 적용할 수 있다는 의미 입니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% select(\"job1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 41,108 × 1\n   job1     \n   <dbl+lbl>\n 1 1 [1개]  \n 2 1 [1개]  \n 3 1 [1개]  \n 4 1 [1개]  \n 5 1 [1개]  \n 6 1 [1개]  \n 7 1 [1개]  \n 8 1 [1개]  \n 9 1 [1개]  \n10 1 [1개]  \n# … with 41,098 more rows\n```\n:::\n\n```{.r .cell-code}\nkwcs %>% select(job1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 41,108 × 1\n   job1     \n   <dbl+lbl>\n 1 1 [1개]  \n 2 1 [1개]  \n 3 1 [1개]  \n 4 1 [1개]  \n 5 1 [1개]  \n 6 1 [1개]  \n 7 1 [1개]  \n 8 1 [1개]  \n 9 1 [1개]  \n10 1 [1개]  \n# … with 41,098 more rows\n```\n:::\n:::\n\n\n 제외하는 방법은 `-`를 사용합니다. \n \n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- kwcs %>%\n  select(id, wt, area) %>%\n  head() \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n     id    wt area     \n  <dbl> <dbl> <dbl+lbl>\n1     2 0.137 3 [대구] \n2     3 0.350 3 [대구] \n3     6 0.156 7 [울산] \n4     8 0.228 7 [울산] \n5     9 0.168 7 [울산] \n6    10 0.675 6 [대전] \n```\n:::\n:::\n\n\n`test`라는 데이터셑을 만들었습니다. `id`, `wt`, `area`라는 변수를 갖은 데이터 입니다. 여기서 id라는 변수를 제외하겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\ntest %>% select(-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n     wt area     \n  <dbl> <dbl+lbl>\n1 0.137 3 [대구] \n2 0.350 3 [대구] \n3 0.156 7 [울산] \n4 0.228 7 [울산] \n5 0.168 7 [울산] \n6 0.675 6 [대전] \n```\n:::\n\n```{.r .cell-code}\ntest %>% select(-id)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n     wt area     \n  <dbl> <dbl+lbl>\n1 0.137 3 [대구] \n2 0.350 3 [대구] \n3 0.156 7 [울산] \n4 0.228 7 [울산] \n5 0.168 7 [울산] \n6 0.675 6 [대전] \n```\n:::\n:::\n\n\n## filter\n\n `filter` 는 특정 조건에 해당하는 행(row)를 선택합니다. 예를 들어 성별 중 남성만, 여성만 선택한 다는가 특정 연령 범위를 선택합니다. 이때 몇몇 조건문을 사용합니다. `==`은 같다는 뜻입니다. 아래와 같이 활용합니다.\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  select(TSEX, AGE) %>%\n  filter(AGE ==55) %>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  TSEX        AGE\n  <dbl+lbl> <dbl>\n1 2 [여성]     55\n2 2 [여성]     55\n3 2 [여성]     55\n4 1 [남성]     55\n5 1 [남성]     55\n6 1 [남성]     55\n```\n:::\n:::\n\n `&`는 and `|`는 or 을 의미합니다.  성별과 연령을 동시에 조건을 주도록 하겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% \n  select(TSEX, AGE) %>%\n  filter(TSEX ==1 & AGE <17) # or == |\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 2\n# … with 2 variables: TSEX <dbl+lbl>, AGE <dbl>\n```\n:::\n:::\n\n`!`는 아니라는 표시입니다. 이것을 통해서 간단하게 여러 조건을 생략시킬 수 있습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  select(TSEX, AGE) %>%\n  filter(TSEX !=1) %>%\n  filter(AGE >=16 & AGE <18)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 2\n# … with 2 variables: TSEX <dbl+lbl>, AGE <dbl>\n```\n:::\n:::\n\n `%in%`를 사용하면 여러 조건을 나열하는 방법으로 선택할 수 있습니다. 명목변수 등에 사용하기 편합니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  select(TSEX, AGE) %>%\n  filter(TSEX %in% c(1, 2)) %>% # %in% allow multiple filtering\n  filter(!AGE >16) # ! means negative condition\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 2\n# … with 2 variables: TSEX <dbl+lbl>, AGE <dbl>\n```\n:::\n:::\n\n \n## arrange\n\n arrange는 순차 정렬하는 함수입니다. 정방향, 역방향이 가능합니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  select(AGE) %>%\n  arrange(AGE) %>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n    AGE\n  <dbl>\n1    19\n2    19\n3    19\n4    19\n5    19\n6    19\n```\n:::\n\n```{.r .cell-code}\nkwcs %>%\n  select(AGE) %>%\n  arrange(desc(AGE)) %>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n    AGE\n  <dbl>\n1    69\n2    69\n3    69\n4    69\n5    69\n6    69\n```\n:::\n:::\n\n\n## mutate\n\n`mutate`는 변수를 변형하는 가장 기본이면서 자주 사용되는 함수 입니다. 반드시 익숙해여쟈 하는 함수 입니다. mutate 단독으로 쓰이기 보다는 여러 조건문인 `ifelse`, `case_when`, `recode`를 이용합니다. 될수 있으면 `ifelse`보다는 `case_when`을 이용하는 것이 향후 SQL 등을 사용할 때 더 편할 수 있어 추천합니다. <br>\n 남녀가 현재는 1인 남자, 2가 여자 입니다. 이를 male, female로 바꾸겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  select(TSEX, AGE) %>%\n  mutate(sexgp = case_when(\n    TSEX==1 ~ 'male', \n    TSEX==2 ~ 'female'\n  )) %>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  TSEX        AGE sexgp \n  <dbl+lbl> <dbl> <chr> \n1 2 [여성]     54 female\n2 2 [여성]     64 female\n3 2 [여성]     65 female\n4 2 [여성]     57 female\n5 1 [남성]     38 male  \n6 2 [여성]     47 female\n```\n:::\n:::\n\n이번에는 연령을 5세 단위로 바꾸어 보겠습니다. 그리고 test1이라는 데이터로 변형시켜보겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\ntest1 = kwcs %>%\n  select(TSEX, AGE) %>%\n  mutate(sexgp = case_when(\n    TSEX==1 ~ 'male', \n    TSEX==2 ~ 'female'\n  )) %>%\n  mutate(agegp = case_when(\n    AGE <25 ~ \"<25\",\n    AGE <30 ~ \"<30\", \n    AGE <35 ~ \"<35\", \n    AGE <40 ~ \"<40\", \n    AGE <45 ~ \"<45\", \n    AGE <50 ~ \"<50\",\n    AGE <55 ~ \"<55\", \n    AGE <60 ~ \"<60\",\n    TRUE ~ \"\\u226560\" # 나머지는 모두 >65 (\\u2265는 크거나 같다는 symbol)\n  )) %>%\n  slice(1:10)\n```\n:::\n\n test1에는 sexgp가 female , male 이라고 되어 있네요, 이때 female을 Female로 대문자 변화, male을 Male로 대문자 변환해 보겠습니다. recode를 사용하겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\ntest1 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n   TSEX        AGE sexgp  agegp\n   <dbl+lbl> <dbl> <chr>  <chr>\n 1 2 [여성]     54 female <55  \n 2 2 [여성]     64 female ≥60  \n 3 2 [여성]     65 female ≥60  \n 4 2 [여성]     57 female <60  \n 5 1 [남성]     38 male   <40  \n 6 2 [여성]     47 female <50  \n 7 2 [여성]     54 female <55  \n 8 2 [여성]     35 female <40  \n 9 2 [여성]     68 female ≥60  \n10 2 [여성]     69 female ≥60  \n```\n:::\n:::\n\n 만연 female, male 두개뿐이라면 이 방법이 쉬울 수 있습니다. case_when과 female, male을 적절히 사용하면 되겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\ntest1 %>%\n  mutate(Sexgp = recode(sexgp, \n                        \"female\" = \"Female\", \n                        \"male\"   = \"Male\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   TSEX        AGE sexgp  agegp Sexgp \n   <dbl+lbl> <dbl> <chr>  <chr> <chr> \n 1 2 [여성]     54 female <55   Female\n 2 2 [여성]     64 female ≥60   Female\n 3 2 [여성]     65 female ≥60   Female\n 4 2 [여성]     57 female <60   Female\n 5 1 [남성]     38 male   <40   Male  \n 6 2 [여성]     47 female <50   Female\n 7 2 [여성]     54 female <55   Female\n 8 2 [여성]     35 female <40   Female\n 9 2 [여성]     68 female ≥60   Female\n10 2 [여성]     69 female ≥60   Female\n```\n:::\n:::\n\n 60세 미만을 young, 60세 이상을 old로 구분하여 young female, old female, young male, old male로 바꾸어 보겠습니다. case_when에는 처음에 사용한 것을 제외하고 나머지에서라는 뜻이 포함되어 있지요. 즉 ifelse 가 이미 숨어있습니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest1 %>%\n  mutate(intgp = case_when(\n    AGE <60 & TSEX == 1 ~ \"young male\", \n    AGE <60 & TSEX == 2 ~ \"young female\", \n    TSEX == 1 ~ \"old male\", \n    TSEX == 2 ~ \"old female\" \n  ))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   TSEX        AGE sexgp  agegp intgp       \n   <dbl+lbl> <dbl> <chr>  <chr> <chr>       \n 1 2 [여성]     54 female <55   young female\n 2 2 [여성]     64 female ≥60   old female  \n 3 2 [여성]     65 female ≥60   old female  \n 4 2 [여성]     57 female <60   young female\n 5 1 [남성]     38 male   <40   young male  \n 6 2 [여성]     47 female <50   young female\n 7 2 [여성]     54 female <55   young female\n 8 2 [여성]     35 female <40   young female\n 9 2 [여성]     68 female ≥60   old female  \n10 2 [여성]     69 female ≥60   old female  \n```\n:::\n:::\n\n## group_by\n\n group_by는 데이터 탐색에서 가장 많이 사용되면, 연속변수는 summrise와 명목변수는 count와 같이 사용됩니다. group_by에 의해 변수값에 따라 정리가 되게 됩니다. 새로운 변수은 `heal_prob1`를 사용해 보겠습니다. heal_prob1는 요통여 부이고, 요통이 있으면 1, 없으면 2로 되어 있습니다. 결측값, 무응답이 많으니 heal_prob1 에 무응답이 있는 경우 제외하겠습니다. NA 결측값은 is.na(변수)로 찾을 수 있습니다. 우선 count로 해보겠습니다 .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>% \n  count(heal_prob1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  heal_prob1     n\n  <dbl+lbl>  <int>\n1  1 [있다]  11642\n2  2 [없다]  29437\n3 NA            29\n```\n:::\n:::\n\nNA가 59개 있네요. <br>\n아래와 같이 sexgp별로 요통을 호소하는 사람이 얼마나 있는지 확인해 보겠습니다. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  filter(!is.na(heal_prob1)) %>% # is.na() 즉 NA이면에서 !는 NA가 아니면이라는 뜻\n  select(TSEX, AGE, heal_prob1) %>%\n  mutate(sexgp=case_when(\n    TSEX==1 ~ \"Men\", \n    TRUE ~ \"Female\"\n  )) %>%\n  group_by(sexgp) %>%\n  count(heal_prob1) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n# Groups:   sexgp [2]\n  sexgp  heal_prob1     n\n  <chr>  <dbl+lbl>  <int>\n1 Female 1 [있다]    6771\n2 Female 2 [없다]   15104\n3 Men    1 [있다]    4871\n4 Men    2 [없다]   14333\n```\n:::\n:::\n\n\n 연령별로는 어떠한 비율인지 확인해 보겠습니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  filter(!is.na(heal_prob1)) %>% # is.na() 즉 NA이면에서 !는 NA가 아니면이라는 뜻\n  select(TSEX, AGE, heal_prob1) %>%\n  mutate(sexgp=case_when(\n    TSEX==1 ~ \"Men\", \n    TRUE ~ \"Female\"\n  )) %>%\n  mutate(agegp = case_when(\n    AGE <25 ~ \"<25\",\n    AGE <30 ~ \"<30\", \n    AGE <35 ~ \"<35\", \n    AGE <40 ~ \"<40\", \n    AGE <45 ~ \"<45\", \n    AGE <50 ~ \"<50\",\n    AGE <55 ~ \"<55\", \n    AGE <60 ~ \"<60\",\n    TRUE ~ \"\\u226560\" # 나머지는 모두 >65 (\\u2265는 크거나 같다는 symbol)\n  ))  %>%\n  group_by(agegp) %>%\n  count(heal_prob1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 3\n# Groups:   agegp [9]\n   agegp heal_prob1     n\n   <chr> <dbl+lbl>  <int>\n 1 <25   1 [있다]     144\n 2 <25   2 [없다]    1263\n 3 <30   1 [있다]     397\n 4 <30   2 [없다]    2462\n 5 <35   1 [있다]     578\n 6 <35   2 [없다]    2954\n 7 <40   1 [있다]     891\n 8 <40   2 [없다]    3430\n 9 <45   1 [있다]    1103\n10 <45   2 [없다]    3679\n11 <50   1 [있다]    1427\n12 <50   2 [없다]    3892\n13 <55   1 [있다]    1718\n14 <55   2 [없다]    4043\n15 <60   1 [있다]    2046\n16 <60   2 [없다]    3616\n17 ≥60   1 [있다]    3338\n18 ≥60   2 [없다]    4098\n```\n:::\n:::\n\n 한눈에 파악하기 어렵네요. 그럼 어떻게 하는 것이 좋을 까요, mutate를 통해 율을 구해보는 것이 좋겠습니다. \n \n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  filter(!is.na(heal_prob1)) %>% # is.na() 즉 NA이면에서 !는 NA가 아니면이라는 뜻\n  select(TSEX, AGE, heal_prob1) %>%\n  mutate(sexgp=case_when(\n    TSEX==1 ~ \"Men\", \n    TRUE ~ \"Female\"\n  )) %>%\n  mutate(agegp = case_when(\n    AGE <25 ~ \"<25\",\n    AGE <30 ~ \"<30\", \n    AGE <35 ~ \"<35\", \n    AGE <40 ~ \"<40\", \n    AGE <45 ~ \"<45\", \n    AGE <50 ~ \"<50\",\n    AGE <55 ~ \"<55\", \n    AGE <60 ~ \"<60\",\n    TRUE ~ \"\\u226560\" # 나머지는 모두 >65 (\\u2265는 크거나 같다는 symbol)\n  ))  %>%\n  group_by(agegp) %>%\n  count(heal_prob1) %>%\n  mutate(prob = n/sum(n)) %>% #proportion을 구함\n  filter(heal_prob1 == 1) # 요통이 있다고한 사람을 비율만 남김. \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 4\n# Groups:   agegp [9]\n  agegp heal_prob1     n  prob\n  <chr> <dbl+lbl>  <int> <dbl>\n1 <25   1 [있다]     144 0.102\n2 <30   1 [있다]     397 0.139\n3 <35   1 [있다]     578 0.164\n4 <40   1 [있다]     891 0.206\n5 <45   1 [있다]    1103 0.231\n6 <50   1 [있다]    1427 0.268\n7 <55   1 [있다]    1718 0.298\n8 <60   1 [있다]    2046 0.361\n9 ≥60   1 [있다]    3338 0.449\n```\n:::\n:::\n\n\n 요통의 유병율이 연령이 증가할 수록 점차 증가하고 있네요, 남녀의 차이가 있을 까요? 남녀별 구분을 위해 group_by( )에 sexgp를 추가했습니다 .\n \n\n::: {.cell}\n\n```{.r .cell-code}\nsmry1 = kwcs %>%\n  filter(!is.na(heal_prob1)) %>% # is.na() 즉 NA이면에서 !는 NA가 아니면이라는 뜻\n  select(TSEX, AGE, heal_prob1) %>%\n  mutate(sexgp=case_when(\n    TSEX==1 ~ \"Men\", \n    TRUE ~ \"Female\"\n  )) %>%\n  mutate(agegp = case_when(\n    AGE <25 ~ \"<25\",\n    AGE <30 ~ \"<30\", \n    AGE <35 ~ \"<35\", \n    AGE <40 ~ \"<40\", \n    AGE <45 ~ \"<45\", \n    AGE <50 ~ \"<50\",\n    AGE <55 ~ \"<55\", \n    AGE <60 ~ \"<60\",\n    TRUE ~ \"\\u226560\" # 나머지는 모두 >65 (\\u2265는 크거나 같다는 symbol)\n  ))  %>%\n  group_by(sexgp, agegp) %>% # 성별, 연령별\n  count(heal_prob1) %>%\n  mutate(prob = n/sum(n)) %>% #proportion을 구함\n  filter(heal_prob1 == 1) # 요통이 있다고한 사람을 비율만 남김. \nsmry1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 5\n# Groups:   sexgp, agegp [18]\n   sexgp  agegp heal_prob1     n   prob\n   <chr>  <chr> <dbl+lbl>  <int>  <dbl>\n 1 Female <25   1 [있다]      79 0.105 \n 2 Female <30   1 [있다]     225 0.164 \n 3 Female <35   1 [있다]     314 0.180 \n 4 Female <40   1 [있다]     416 0.205 \n 5 Female <45   1 [있다]     558 0.236 \n 6 Female <50   1 [있다]     761 0.266 \n 7 Female <55   1 [있다]    1041 0.309 \n 8 Female <60   1 [있다]    1316 0.390 \n 9 Female ≥60   1 [있다]    2061 0.515 \n10 Men    <25   1 [있다]      65 0.0997\n11 Men    <30   1 [있다]     172 0.116 \n12 Men    <35   1 [있다]     264 0.148 \n13 Men    <40   1 [있다]     475 0.207 \n14 Men    <45   1 [있다]     545 0.225 \n15 Men    <50   1 [있다]     666 0.271 \n16 Men    <55   1 [있다]     677 0.284 \n17 Men    <60   1 [있다]     730 0.319 \n18 Men    ≥60   1 [있다]    1277 0.372 \n```\n:::\n:::\n\n \n> summarise\n\n `summarise`는 colum 별로 정리하여 나타낸는 함수 입니다. 이때 주로 같이 사용하는 함수는 mean, sd, median, max, min 등이며, quantile도 많이 사용됩니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  summarise(mean_age = mean(AGE), \n            std_age  = sd(AGE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  mean_age std_age\n     <dbl>   <dbl>\n1     47.0    12.4\n```\n:::\n:::\n\ngroup_by와 함께 사용해 볼까요?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwcs %>%\n  filter(!is.na(heal_prob1)) %>% # is.na() 즉 NA이면에서 !는 NA가 아니면이라는 뜻\n  select(TSEX, AGE, heal_prob1) %>%\n  mutate(sexgp=case_when(\n    TSEX==1 ~ \"Men\", \n    TRUE ~ \"Female\"\n  )) %>%\n  group_by(sexgp) %>%\n  summarise(mean_age = mean(AGE), \n            std_age  = sd(AGE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  sexgp  mean_age std_age\n  <chr>     <dbl>   <dbl>\n1 Female     47.6    12.2\n2 Men        46.3    12.5\n```\n:::\n:::\n\n중요한 부분인 group_by를 한후에 group을 해제하기 위해서는 ungroup()을 해주어야 합니다. 향후 Table 만들기 등에서 활용되니 기역해 주세요. \n\n## merge, join\n\n 이번에는 두개의 테이블을 하나로 만들어 보겠습니다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 <- tibble(id = c(1, 2), var1 = c(\"a1\", \"a2\"))\ntab2 <- tibble(id = c(2, 3), var2 = c(\"b1\", \"b2\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n     id var1 \n  <dbl> <chr>\n1     1 a1   \n2     2 a2   \n```\n:::\n\n```{.r .cell-code}\ntab2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n     id var2 \n  <dbl> <chr>\n1     2 b1   \n2     3 b2   \n```\n:::\n:::\n\n \n 이둘을 합쳐 보겠습니다. \n>full join\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 %>%\n  full_join(tab2, by=c(\"id\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n     id var1  var2 \n  <dbl> <chr> <chr>\n1     1 a1    <NA> \n2     2 a2    b1   \n3     3 <NA>  b2   \n```\n:::\n:::\n\n>inner join\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 %>%\n  inner_join(tab2, by=c(\"id\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n     id var1  var2 \n  <dbl> <chr> <chr>\n1     2 a2    b1   \n```\n:::\n:::\n\n\n>right join\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 %>%\n  right_join(tab2, by=c(\"id\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n     id var1  var2 \n  <dbl> <chr> <chr>\n1     2 a2    b1   \n2     3 <NA>  b2   \n```\n:::\n:::\n\n\n\n>left join\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 %>%\n  left_join(tab2, by=c(\"id\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n     id var1  var2 \n  <dbl> <chr> <chr>\n1     1 a1    <NA> \n2     2 a2    b1   \n```\n:::\n:::\n\n\n어떻게 결과가 예상과 같았나요? 아래와 같이 정리할 수 있습니다. \n\n<img src=\"img/tidy_join_fig.PNG\" width=\"600\" height=\"300\">\n\n\n",
    "supporting": [
      "241_datamanipulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.27/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}