[
  {
    "objectID": "350_statistical_plot.html#install-package-from-github",
    "href": "350_statistical_plot.html#install-package-from-github",
    "title": "11  T검정, 로지스틱 회귀분석 플랏",
    "section": "11.1 install package from github",
    "text": "11.1 install package from github\ntidyvere and htmlTable, and broom 가 데이터를 변환하고 표시하는데 자주 사용됩니다. devtools 은 “github”에 있는 함수를 불러오는데 사용됩니다.  install_github 을 통해 패키지를 설치하겠습니다.\n\nrm(list=ls())\n#basic requirment\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif(!require(\"htmlTable\")) install.packages(\"htmlTable\")\nif(!require(\"broom\")) install.packages(\"broom\")\nif(!require(\"labelled\")) install.packages(\"labelled\")\n# packages from github\nif(!require(\"devtools\")) install.packages(\"devtools\")\nlibrary(devtools)\nif(!require(\"tabf\")) install_github(\"jinhaslab/tabf\",  quiet = TRUE)\nlibrary(tabf)"
  },
  {
    "objectID": "350_statistical_plot.html#데이터-준비",
    "href": "350_statistical_plot.html#데이터-준비",
    "title": "11  T검정, 로지스틱 회귀분석 플랏",
    "section": "11.2 데이터 준비",
    "text": "11.2 데이터 준비\n\n11.2.1 근로환경조사 기본 변수 생성 (선택)\ndata manipulation에서 실습한 내용을 통해 변수를 실습을 위한 변수를 생성한 데이터인 kwcsData1.rds 를 이용하겠습니다. 이에 대한 자세한 과정은 이전 챔터에 있습니다.  Table 1 변수 생성과정 챕터\n\nurl <- \"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/kwcsData1.rds\"\ndownload.file(url, \"data/kwcsData1.rds\")\nkwcs = readRDS(\"data/kwcsData1.rds\")"
  },
  {
    "objectID": "350_statistical_plot.html#overview-of-data-and-table-1",
    "href": "350_statistical_plot.html#overview-of-data-and-table-1",
    "title": "11  T검정, 로지스틱 회귀분석 플랏",
    "section": "11.3 Overview of data and Table 1",
    "text": "11.3 Overview of data and Table 1\nVariables can be divided into dependent and independent variables, and independent variables can be further categorized based on their nature into continuous or nominal variables. Let’s distinguish them as such.\n\nstratas  = c(\"sleepgp\")\ncatVars = c(\"wwa1gp\", \"shortReturn\",\"shiftWork\" , \"njob\", \"sexgp\",  \"edugp\", \"empgp\")\nconVars = c(\"AGE\",\"satisfaction\")\n\n\ntab1 = tabf(dat1=dat1, stratas = stratas, catVars = catVars, conVars = conVars)\ntab1\n\n# A tibble: 22 × 5\n   variables      values       `0.non distrubance` `1.sleep disturbance` p.value\n   <chr>          <chr>        <chr>               <chr>                 <chr>  \n 1 \"AGE\"          \"\"           46.8±12.4           49.7±11.9             \"<0.00…\n 2 \"wwa1gp\"       \"Never\"      12222 (94.7%)       684 (5.3%)            \"<0.00…\n 3 \"\"             \"Rarely\"     12316 (94.5%)       714 (5.5%)            \"\"     \n 4 \"\"             \"Sometimes\"  9112 (90.3%)        981 (9.7%)            \"\"     \n 5 \"\"             \"Often\"      3456 (82.8%)        717 (17.2%)           \"\"     \n 6 \"\"             \"Always\"     634 (70.0%)         272 (30.0%)           \"\"     \n 7 \"satisfaction\" \"\"           2.1±0.5             2.4±0.6               \"<0.00…\n 8 \"shortReturn\"  \"non short … 36183 (92.5%)       2927 (7.5%)           \"<0.00…\n 9 \"\"             \"short retu… 1557 (77.9%)        441 (22.1%)           \"\"     \n10 \"shiftWork\"    \"non shift … 35056 (91.9%)       3073 (8.1%)           \"<0.00…\n# ℹ 12 more rows\n\n\n\ntab1 %>% \n  setNames(c(\"\", \"\", \"None\", \"Disturbance\", \"P value\")) %>%\n  htmlTable(\n    cgroup = c(\"\",  \"Sleep disturbance\", \"\"), \n    n.cgroup = c(2, 2, 1), \n    tfoot = \"P value calculated by Chisq-Test and T-Test\", \n    rnames = FALSE, \n    caption = \"Basic Characteristics according to Sleep disturbance\", \n    css.table = \"font-family: 'Times New Roman';\"\n  ) \n\n\n\n\n\nBasic Characteristics according to Sleep disturbance\n\n \nSleep disturbance \n\n\n\n\n \n \nNone\nDisturbance \n \nP value\n\n\n\n\nAGE\n \n \n46.8±12.4\n49.7±11.9 \n \n<0.001\n\n\nwwa1gp\nNever \n \n12222 (94.7%)\n684 (5.3%) \n \n<0.001\n\n\n\nRarely \n \n12316 (94.5%)\n714 (5.5%) \n \n\n\n\n\nSometimes \n \n9112 (90.3%)\n981 (9.7%) \n \n\n\n\n\nOften \n \n3456 (82.8%)\n717 (17.2%) \n \n\n\n\n\nAlways \n \n634 (70.0%)\n272 (30.0%) \n \n\n\n\nsatisfaction\n \n \n2.1±0.5\n2.4±0.6 \n \n<0.001\n\n\nshortReturn\nnon short return \n \n36183 (92.5%)\n2927 (7.5%) \n \n<0.001\n\n\n\nshort return \n \n1557 (77.9%)\n441 (22.1%) \n \n\n\n\nshiftWork\nnon shift work \n \n35056 (91.9%)\n3073 (8.1%) \n \n<0.001\n\n\n\nshift work \n \n2684 (90.1%)\n295 (9.9%) \n \n\n\n\nnjob\none-job \n \n37471 (91.9%)\n3317 (8.1%) \n \n<0.001\n\n\n\nnjob \n \n269 (84.1%)\n51 (15.9%) \n \n\n\n\nsexgp\nMen \n \n17892 (93.1%)\n1327 (6.9%) \n \n<0.001\n\n\n\nWomen \n \n19848 (90.7%)\n2041 (9.3%) \n \n\n\n\nedugp\nuniversity or more \n \n19597 (92.9%)\n1502 (7.1%) \n \n<0.001\n\n\n\nhigh school \n \n14943 (91.9%)\n1318 (8.1%) \n \n\n\n\n\nmiddle school or below \n \n3200 (85.4%)\n548 (14.6%) \n \n\n\n\nempgp\npaid-worker \n \n25786 (92.4%)\n2122 (7.6%) \n \n<0.001\n\n\n\nemployer/self-employer \n \n2539 (91.7%)\n229 (8.3%) \n \n\n\n\n\nown-account worker \n \n8359 (90.5%)\n880 (9.5%) \n \n\n\n\n\nunpaind family work \n \n1056 (88.5%)\n137 (11.5%) \n \n\n\n\n\nP value calculated by Chisq-Test and T-Test\n\n\n\n\nT-test\n\nThe mean level of age are differ according to sleep disturbance. Box plot show mean and distribution of values. There are two method of t.test in R. One is using two vector, and the other is using of relationship.\n\n#stratas = \"sleepgp\"\nage1 = dat1$AGE[dat1$sleepgp ==\"0.non distrubance\"]\nage2 = dat1$AGE[dat1$sleepgp ==\"1.sleep disturbance\"] \nt.test(age1, age2)\n\n\n    Welch Two Sample t-test\n\ndata:  age1 and age2\nt = -13.409, df = 4040.8, p-value < 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -3.306275 -2.462776\nsample estimates:\nmean of x mean of y \n 46.77878  49.66330 \n\nt.test(dat1$AGE ~ dat1$sleepgp)\n\n\n    Welch Two Sample t-test\n\ndata:  dat1$AGE by dat1$sleepgp\nt = -13.409, df = 4040.8, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group 0.non distrubance and group 1.sleep disturbance is not equal to 0\n95 percent confidence interval:\n -3.306275 -2.462776\nsample estimates:\n  mean in group 0.non distrubance mean in group 1.sleep disturbance \n                         46.77878                          49.66330 \n\n\nT test’s p-value can be generated by following pipe code.\n\nttestPvalue <- dat1 %>%\n  select(sleepgp, AGE) %>%\n  pivot_longer(-sleepgp) %>%\n  nest(dat=-name) %>%\n  mutate(fit =map(dat, ~t.test(.$value ~ .$sleepgp)), \n         tidied =map(fit, tidy)) %>%\n  unnest(tidied) %>%\n  select(name, p.value) %>%\n  mutate(pvalue = ifelse(p.value < 0.001, \"<0.001\", sprintf(\"%.3f\", p.value))) %>%\n  pull(pvalue)\n\n# 위에는 여러개의 p value를 구할때 사용하는 것이고 하나만 사용할 때는\nmyttest <- t.test(dat1$AGE ~ dat1$sexgp)\nmyttest$p.value #를 사용한다. \n\n[1] 3.287249e-28\n\n\n\ndat1 %>%\n  select(sleepgp, AGE) %>%\n  ggplot(aes(x=sleepgp, y= AGE)) +\n  geom_boxplot() \n\n\n\n\n\ndat1 %>%\n  select(sleepgp, AGE) %>%\n  ggplot(aes(x=sleepgp, y= AGE)) +\n  geom_boxplot() +\n  ggtitle(\"Age according to sleep disturbance\")+\n  xlab(\"Sleep Disturbance\") + \n  theme(text=element_text(family=\"Times\"))\n\n\n\n\n\ndat1 %>%\n  select(sleepgp, AGE) %>%\n  ggplot(aes(x=sleepgp, y= AGE)) +\n  geom_boxplot() +\n  ggtitle(\"Age according to sleep disturbance\")+\n  xlab(\"Sleep Disturbance\") + \n  annotate(\n    geom =\"text\", -Inf, Inf, \n    hjust=-3, vjust=5,\n    label =sprintf(\"P value:  %s\", ttestPvalue), \n    family = \"Times\"\n  ) +\n  theme(text=element_text(family=\"Times\")) \n\n\n\n\n\nChisq Test\n\nwwa1gp is “A. kept worrying about work when you were not working”, and the response is 0.Never, 1.Rarely, 2.Sometimes, 3.Often and 4.Always. In the previous table, the distribution of sleep distrubance are differ according to wwa1gp.  The bar chart is one of the best option for distribution visualization.\n\ndat1 %>%\n  group_by(wwa1gp) %>%\n  count(sleepgp) %>%\n  mutate(prob = n/sum(n)*100, \n         prob = round(prob, 1)) %>%\n  filter(sleepgp ==\"1.sleep disturbance\") %>%\n  ggplot(aes(x=wwa1gp, y = prob)) +\n  geom_bar(stat=\"identity\")\n\n\n\n\nSome modification are needed to communicat to other researcher. Percent scale are easy to follow.\n\ndat1 %>%\n  group_by(wwa1gp) %>%\n  count(sleepgp) %>%\n  mutate(prob = n/sum(n)*100, \n         prob = round(prob, 1)) %>%\n  filter(sleepgp ==\"1.sleep disturbance\") %>%\n  ggplot(aes(x=wwa1gp, y = prob)) +\n  theme(text=element_text(family=\"Times New Roman\", face=\"bold\", size=12)) +\n  xlab(\"kept worrying about work when you were not working\") +\n  ylab(\"Sleep Disturbance (proportion)\") +\n  ylim(0, 0.35)+\n  geom_bar(stat=\"identity\") +\n  geom_text(aes(label = sprintf(\"%s%%\", prob)),  vjust = -0.5) +\n  scale_y_continuous(labels = function(x) sprintf(\"%s%%\", round(x)))\n\n\n\n\nNow, we added the p value of chisq.test().\n\nchisqp = dat1 %>%\n  select(wwa1gp, sleepgp) %>%\n  table() %>%\n  chisq.test()\nif (chisqp$p.value <0.001){\n  pChisqV = \"<0.001\"\n  } else{\n    pChisqV = chisqp$p.value %>% sprintf(\"%.3f\", .)\n  }\npChisqV\n\n[1] \"<0.001\"\n\n\n\n#library(extrafont)\nlibrary(ggthemes)\ndat1 %>%\n  group_by(wwa1gp) %>%\n  count(sleepgp) %>%\n  mutate(prob = n/sum(n)*100, \n         prob = round(prob, 1)) %>%\n  filter(sleepgp ==\"1.sleep disturbance\") %>%\n  ggplot(aes(x=wwa1gp, y = prob)) +\n  xlab(\"kept worrying about work when you were not working\") +\n  ylab(\"Sleep Disturbance (proportion)\") +\n  geom_bar(stat=\"identity\") +\n  geom_text(aes(label = sprintf(\"%s%%\", prob)),  vjust = -0.5) +\n  scale_y_continuous(labels = function(x) sprintf(\"%s%%\", round(x))) +\n  annotate(\n    geom =\"text\", -Inf, Inf, \n    hjust=-0.5, vjust=8,\n    label =sprintf(\"P value:  %s\", pChisqV), \n    family = \"Times New Roman\", \n    fontface = \"bold\"\n  ) +\n  theme_minimal() +\n  theme(text=element_text(family=\"Times New Roman\", face=\"bold\", size=12))"
  },
  {
    "objectID": "350_statistical_plot.html#odds-ratio-and-95-confidence-interval",
    "href": "350_statistical_plot.html#odds-ratio-and-95-confidence-interval",
    "title": "11  T검정, 로지스틱 회귀분석 플랏",
    "section": "11.4 Odds ratio and 95% confidence interval",
    "text": "11.4 Odds ratio and 95% confidence interval\n\nLogistic regression model\n\nThere are 3 kind of models, model II and III are include more confounding variables compare to model I.\n\nmod1 = dat1 %>%\n  glm(data=.,family=\"binomial\",formula = sleepgp == \"1.sleep disturbance\"  \n      ~ wwa1gp)\nmod2 = dat1 %>%\n  glm(data=.,family=\"binomial\",formula = sleepgp == \"1.sleep disturbance\"\n      ~ wwa1gp + AGE + sexgp +satisfaction)\nmod3 = dat1 %>%\n  glm(data=.,family=\"binomial\",formula = sleepgp == \"1.sleep disturbance\"\n      ~ wwa1gp + AGE + sexgp +satisfaction + shiftWork + njob)\n\noddf0() function gives us odds ratio, lower limt and upper limit (95% confidence interval). We can draw OR (95% CI) plot, using errobar() function. we can also change the color using RGB triplet (ref: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)).\n\noddf0(mod1) %>%\n  ggplot(aes(y=values, x = or)) +\n  theme_classic() +\n  geom_errorbarh(aes(xmin = ll, xmax = ul), height = 0.09, color = \"#666666\", size=0.5) +\n  geom_point(shape = 15, size = 2, color = \"#444444\")  +\n  geom_vline(xintercept = 1, color = \"#FF0000\", linetype = \"dashed\", cex =0.5, alpha = 0.5) +\n  ylab(\"kept worrying about work when you were not working\") +\n  xlab(\"Odds Ratio and 95% Confidence Interval of Sleep Dsturbance\") +\n  theme(text = element_text(family =\"Times\"))\n\n\n\n\nVertical error bar also suitable to plot the OR (95% CI).\n\noddf0(mod1) %>%\n  ggplot(aes(x=values, y = or)) +\n  theme_classic() +\n  geom_errorbar(aes(ymin = ll, ymax = ul), width = 0.07, color = \"#666666\", size=0.5) +\n  geom_point(shape = 15, size = 2.5, color = \"#444444\") +\n  geom_hline(yintercept = 1, color = \"#FF0000\", linetype = \"dashed\", cex =0.5, alpha = 0.5) +\n  xlab(\"Kept worrying about work when you were not working\") +\n  ylab(\"Odds Ratio and 95% Confidence Interval of Sleep Dsturbance\") +\n  theme(text = element_text(family =\"Times\"))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "보건학데이터과학 실습",
    "section": "",
    "text": "소개"
  },
  {
    "objectID": "index.html#보건학",
    "href": "index.html#보건학",
    "title": "보건학데이터과학 실습",
    "section": "보건학",
    "text": "보건학\n보건학은 인간과 그들의 사회의 건강을 향상시키기 위한 과학입니다. 보건학은 의학에서 사회과학에 이르기까지 여러 학문과 밀접하게 연관되어 있습니다. 따라서, 다학제적 접근법은 보건학 전문가에게 가장 중요한 기술 중 하나입니다."
  },
  {
    "objectID": "index.html#보건학-데이터과학",
    "href": "index.html#보건학-데이터과학",
    "title": "보건학데이터과학 실습",
    "section": "보건학 데이터과학",
    "text": "보건학 데이터과학\n데이터 과학은 크게 데이터를 수집, 처리, 분석하고, 그 결과를 해석하여 의사결정이나 예측, 분류 등의 작업을 수행하는 분야입니다. 이를 위해 프로그래밍, 통계학, 머신러닝 및 도메인 지식을 종합적으로 활용합니다. 이러한 기술을 보건학에 접목시키는 것이 보건학 데이터과학입니다.\n보건학 데이터과학의 주요 특징은 다음과 같습니다:\n\n다양한 데이터의 수집 및 관리:\n\n보건학에서는 환자 기록, 임상 데이터, 역학 조사 데이터, 환경 데이터 등 다양한 유형의 데이터를 다룹니다. 이러한 데이터의 효율적인 수집과 관리는 보건학의 데이터과학에서 중요한 부분을 차지합니다.\n\n통계 및 머신러닝의 적용:\n\n공공보건의 문제를 해결하기 위해, 통계적 방법과 머신러닝 기술을 사용하여 데이터에서 통찰력을 얻거나 예측 모델을 만드는 작업을 수행합니다.\n\n데이터 시각화:\n\n복잡한 보건 데이터를 쉽게 이해하고 해석하기 위해 시각화 기술을 사용합니다. 이를 통해 정책 결정자나 일반 대중에게 데이터를 효과적으로 전달할 수 있습니다.\n\n재현성 및 공유 가능한 연구:\n\n보건학 데이터과학에서는 연구 결과의 재현성을 보장하고, 연구 결과를 다른 연구자와 공유할 수 있도록 투명한 방법을 추구합니다.\n\n도메인 지식:\n\n보건학 데이터과학자는 단순히 데이터과학의 기술만을 가지고 있는 것이 아니라, 보건학에 대한 깊은 이해도 필요합니다. 이를 통해 데이터를 올바르게 해석하고, 실제 보건 문제에 적절한 솔루션을 제시할 수 있습니다."
  },
  {
    "objectID": "index.html#보건학-데이터-과학-과학이-되려면",
    "href": "index.html#보건학-데이터-과학-과학이-되려면",
    "title": "보건학데이터과학 실습",
    "section": "보건학 데이터 과학, 과학이 되려면",
    "text": "보건학 데이터 과학, 과학이 되려면\n과학에서의 제현성 과학에서의 재현성은 연구 결과를 다른 연구자들이 동일한 조건 하에서 반복해서 얻을 수 있는지의 여부를 나타내는 중요한 원칙입니다. 재현성은 과학적 연구의 진정성과 신뢰성을 평가하는 기준 중 하나로 간주됩니다.\n보건학 데이터과학이 과학의 기준에 부합하려면 다음과 같은 재현성 요소들을 갖추어야 합니다\n\n데이터의 접근성:\n\n연구에 사용된 원본 데이터는 공개되어야 하며, 연구를 재현하려는 다른 연구자들이 접근할 수 있어야 합니다. 당연히 개인정보 보호와 관련된 법률 및 규정을 준수하면서, 필요한 경우 익명화 또는 변조된 형태로 데이터를 공개해야 합니다.\n\n분석 코드 및 소프트웨어의 공개:\n\n연구에 사용된 데이터 처리, 분석, 시각화 등의 코드와 사용된 소프트웨어의 버전 정보도 공개되어야 합니다.\n\n분석 방법론의 명확성:\n\n사용된 통계적 방법, 머신러닝 알고리즘, 모델링 접근법 등이 명확하게 기술되어야 합니다.\n\n외부 변수 및 제어:\n\n연구 과정에서 영향을 미칠 수 있는 외부 변수들에 대한 정보와 그것들을 어떻게 제어했는지에 대한 정보가 필요합니다.\n\n결과의 재현 가능성 평가:\n\n가능한 경우, 연구 결과의 재현 가능성을 평가하기 위해 독립된 데이터셋이나 방법론을 사용하여 검증을 시도해야 합니다.\n\n연구 환경의 명세:\n\n연구가 수행된 하드웨어 및 소프트웨어 환경, 그리고 이를 설정하기 위한 파라미터 등도 기록되어야 합니다. 이는 특히 계산적으로 복잡한 모델이나 시뮬레이션을 다룰 때 중요합니다.\n\n피어 리뷰:\n\n보건학 데이터과학 연구의 결과는 동료 평가 과정을 거쳐 검증되어야 합니다. 피어 리뷰는 연구의 품질과 재현성을 높이는 데 중요한 역할을 합니다.\n\n\n정리하면 아래와 같은 흐름데로 연구하게 됩니다.\n 이 튜토리얼에서는 R, Rstudio, markdown, Shiny server, PostgreSQL 및 github를 사용할 것입니다. R은 무료 오픈 소스 통계 언어로, 데이터 과학 분야에서 널리 사용됩니다. 가장 중요한 참고 자료는 Rafael A. Irizarry의 책과 Hadley Wickham의 책입니다. 아래와 같습니다."
  },
  {
    "objectID": "index.html#참고-books",
    "href": "index.html#참고-books",
    "title": "보건학데이터과학 실습",
    "section": "참고 books",
    "text": "참고 books\n\n\n\n\n\n\n\n\ntitle\nauthos\nurl\n\n\n\n\nIntroduction to Data Science with R\nRafael A. Irizarry\nhttps://rafalab.github.io/dsbook/\n\n\nR for Data Science\nGarrett Grolemund, Hadley Wickham\nhttps://r4ds.had.co.nz/index.html\n\n\n\n\nI hope you will get valuable experience with me.\n\n그럼 시작하겠습니다.!!! jinha"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "13  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "370_labelled_plot.html#introduction",
    "href": "370_labelled_plot.html#introduction",
    "title": "12  다차원 라벨자료",
    "section": "12.1 introduction",
    "text": "12.1 introduction\nIn current data, We will used covid19 data from 16 countries. The group is country level and the interesting relationship is regarded on individual economic activity and psychological symptoms. In this chapter, we will discuss about how can visualization multi-level data (The original data are own to Laura, PH.D.)\n\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif(!require(\"ggthemes\")) install.packages(\"ggthemes\")\nif(!require(\"ggrepel\")) install.packages(\"ggrepel\")\nif(!require(\"gridExtra\")) install.packages(\"gridExtra\")\n\n\nurl1 <- \"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/CovidJobLoss.rds\"\ndownload.file(url1, \"data/CovidJobLoss.rds\")\nurl2 <- \"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/hdi.csv\"\ndownload.file(url2, \"data/hdi.csv\")\nurl3 <- \"https://raw.githubusercontent.com/jinhaslab/opendata/main/kwcs/covid_agu1.csv\"\ndownload.file(url3, \"data/covid_agu1.csv\")\n\n\nmm3 = readRDS(\"data/CovidJobLoss.rds\")\nhdi = read_csv(\"data/hdi.csv\")%>% \n  setNames(c('rank', 'country', 'y2019', 'country_1'))\nagu1 <- read_csv('data/covid_agu1.csv')\n\nData manipulation for creating and reshaping variables. We will exam the assoicaton between human development index and covid related outcomes.\n\nmm4 <- mm3 %>%\n    mutate(agegp3 = ifelse(age <=40, '≤40', '>40')) %>%\n    mutate(agegp3 = factor(agegp3, levels=c('≤40', '>40'))) %>%\n    filter(Education %in% c(1:6)) %>%\n    mutate(edugp = ifelse(Education %in% c(1, 2), 1, # high school or less\n                        ifelse(Education %in% c(3),2, # college\n                               ifelse(Education %in% c(4), 3, 4)))) %>% # university (5, 6) Graduate school\n    mutate(edugp2 = ifelse(Education %in% c(1, 2, 3), 1, 2)) %>%\n mutate(EcLossAllgp = ifelse(EcLossAll ==0, 0, 1)) #%>%\n\nmm4.0 = mm4 %>% # hid: human development index for each countries\n  left_join(hdi %>% filter(!is.na(country_1)) %>%\n  rename(country_source = country,\n         country=country_1   ), by = c('country')) %>%\n  mutate(y2019 = ifelse(country_c =='South Korea', 0.916, y2019))\n\n\n12.1.1 Data analysis start\n\n12.1.1.1 job loss due to COVID19, psychological aggravation according to Gender\nExplore data using basic static for job loss prevalence across country and genders. the pyschological aggravation due to covid-19 are also plotted according to same logic.\n\nfig1 <- mm4 %>%\n  group_by(country_c, gender) %>%\n  count(EcLossAllgp) %>%\n  mutate(prob = n/sum(n)) %>%\n  filter(EcLossAllgp == 1 ) %>%\n  ggplot(aes(x = gender, y = prob, fill = gender)) +\n  geom_bar(stat = \"identity\")+\n  xlab(\"\")+\n  ylab(\"Job loss due to COVID19\")+\n  scale_y_continuous(labels = function(x) paste0(x*100, \"%\"))+\n  facet_wrap(country_c ~., nrow = 3) +\n  theme_minimal()+\n  theme(text = element_text(size=17))+\n  theme(legend.position = c(.92, .1))\n\nfig2 <- mm4 %>%\n  group_by(country_c, gender) %>%\n  count(TotalDepAnx) %>%\n  mutate(prob = n/sum(n)) %>%\n  filter(TotalDepAnx == 1 ) %>%\n  ggplot(aes(x = gender, y = prob, fill = gender)) +\n  geom_bar(stat = \"identity\")+\n  ylab(\"Psychological aggravation due to COVID19\")+\n  xlab('Gender')+\n  scale_y_continuous(labels = function(x) paste0(x*100, \"%\"))+\n  facet_wrap(country_c ~., nrow = 3) +\n  theme_minimal()+\n  theme(text = element_text(size=17))+\n  theme(legend.position = c(.92, .1))\n\nSave total figure of fig1 and fig2. arrageGrob make two figures into the one figure.\n\nggsave(arrangeGrob(fig1, fig2, ncol = 1), file ='results/covid/figtotal.png', dpi = 300, width = 10, height =14)\nggsave(arrangeGrob(fig1, fig2, ncol = 1), file ='results/covid/tiff/figtotal.tiff', dpi = 300, width = 10, height =14)\n\n\n\n\n\n\n\n\n12.1.1.2 job loss, psychological aggravation according to age group\n\nfig3 <- mm4.0 %>%\n  #filter(!country %in% c(16, 173)) %>%\n  group_by(country_c, gender, agegp2) %>%\n  count(EcLossAllgp) %>%\n  mutate(prob = n/sum(n)) %>%\n  filter(EcLossAllgp == 1) %>%\n  ggplot(aes(x = agegp2, y = prob, color = gender)) +\n  geom_point(aes(size = n), alpha = 0.2, show.legend = FALSE) +\n  geom_smooth(method = 'loess', span =0.9,  se=FALSE) + \n   ylab(\"Job loss due to COVID19\")+\n    scale_y_continuous(labels = function(x) paste0(x*100, \"%\"))+\n  theme_minimal() +\n  xlab(\"\")+\n  labs(color = \"Gender\") +\n  facet_wrap(country_c~., nrow =3)+\n  theme(legend.position = c(.92, .1))+\n  theme(text = element_text(size=17))+\n  scale_x_continuous(breaks = c(2,4,6,8), labels = c(30,40,50,60))\n\nfig4 <- mm4.0 %>%\n  #filter(!country %in% c(16, 173)) %>%\n  group_by(country_c, gender, agegp2) %>%\n  count(TotalDepAnx) %>%\n  mutate(prob = n/sum(n)) %>%\n  filter(TotalDepAnx == 1) %>%\n  ggplot(aes(x = agegp2, y = prob, color = gender)) +\n  geom_point(aes(size = n), alpha = 0.2, show.legend = FALSE) +\n  geom_smooth(method = 'loess', span =0.9,  se=FALSE) + \n   ylab(\"Psychological aggravation due to COVID19\")+\n    scale_y_continuous(labels = function(x) paste0(x*100, \"%\"))+\n  theme_minimal() +\n  xlab(\"Age (size = number of respondents)\") +\n  labs(color = \"Gender\") +\n  facet_wrap(country_c~., nrow =3)+\n  theme(legend.position = c(.92, .1))+\n  theme(text = element_text(size=17))+\n  scale_x_continuous(breaks = c (2,4,6,8), labels = c(30,40,50,60))\n\nsave figures\n\n#figtotal2 <- grid.arrange(fig3, fig4, ncol = 1)\nggsave(arrangeGrob(fig3, fig4, ncol = 1), file ='results/covid/figtotal2.png', dpi = 300, width = 10, height =14)\nggsave(arrangeGrob(fig3, fig4, ncol = 1), file ='results/covid/tiff/figtotal2.tiff', dpi = 300, width = 10, height =14)\n\n\n\n\n\n\n\n\n\n12.1.2 job loss, psychological aggravation according to Education level\n\nQuzi 1\n\nLet’s fill the { num } to draw following figure.\n\nfig5 <- mm4.0 %>%\n  group_by(edugp, country_c, gender) %>%\n  count(EcLossAllgp ) %>%\n  mutate(prob = n/sum(n)) %>%\n  filter(EcLossAllgp  == 1) %>%\n  ggplot(aes(x = {1}     , y ={2}    , color = {2})) +\n  geom_smooth(method = {3}, span =0.9, se = FALSE) +\n  scale_x_continuous(labels=c(\"1\" = \"≤H\", \"2\" = \"C\",\n                            \"3\" = \"U\", \"4\" = \"G\")) +\n  theme_minimal() + \n  labs(color = {4}) +\n  ylab(\"Job Loss due to COVID19\") +\n  xlab(\"\")+\n  facet_wrap({5})+\n  theme(text = element_text(size=17))+\n  theme(legend.position = c(.92, .1))\n\n# mm4 %>%\n#   count(TotalDepAnx)\nfig6 <- mm4.0 %>%\n  group_by(edugp, country_c, gender) %>%\n  count(TotalDepAnx ) %>%\n  mutate(prob = n/sum(n)) %>%\n  filter(TotalDepAnx  == 1  ) %>%\n  ggplot(aes({6})) +\n  geom_smooth({7}) +\n  scale_x_continuous({8}) +\n  theme_minimal() + \n  ylab(\"Psychological aggravation due to COVID19\") +\n  scale_y_continuous(labels = {9})+\n  xlab(\"H = high school, C = college, U = university, G = graduate \") +\n  labs(color = \"Gender\") +\n  facet_wrap({10})+\n  theme(text = element_text(size=17))+\n  theme(legend.position = c(.92, .1))\n\nsave figure\n\n#figtotal3 <- grid.arrange(fig5, fig6, ncol = 1)\nggsave(arrangeGrob(fig5, fig6, ncol = 1), file ='results/covid/figtotal3.png', dpi = 300, width = 10, height =14)\nggsave(arrangeGrob(fig5, fig6, ncol = 1), file ='results/covid/tiff/figtotal3.tiff', dpi = 300, width = 10, height =14)\n\n\nknitr::include_graphics('results/covid/figtotal3.png')\n\n\n\n\n\n\n12.1.3 Visulization with human develop index stratification\nLabelled data visualization need the code of `geom_label_repel’\n\nagu1 <- read_csv('data/covid_agu1.csv')\n\nlab_mm <- mm4.0 %>%\n  left_join(agu1, by = 'country_c') %>%\n  mutate(inc_aug = c_case_agu1 / population *100000, \n         dth_aug = c_death_agu1/ population *100000) %>%\n  group_by(country_c, gender) %>%\n  summarize(hdi = mean(y2019), \n            Psycho = mean(TotalDepAnx ==1), \n            ecl = mean(EcLossAll !=0),\n            inc = mean(inc_aug)) \n\nlab_mm%>%\n  ggplot(aes(x = hdi, y = ecl, color = inc)) +\n  geom_point() +\n  theme_classic()+\n  xlab(\"Human Devlopment Index\") +\n  #ylab(\"prevalance of Psychological Symptoms\") +\n  ylab(\"prevalance of Economic Loss due to COVID19\") + \n  #ylim(c(-0.1, 1)) + #xlim(c(2, 4)) + \n  geom_label_repel(aes(label = country_c), \n                   fill = NA, # 투명하게 해서 겹쳐도 보이게\n                   alpha =1, size = 3, # 작게\n                   box.padding = 0.4,  # 분별해서\n                   segment.size =0.1,  # 선 \n                   force = 2)      +    # 이것은 무엇일까요?\n   theme_minimal() +\n  geom_smooth(method = 'lm', formula = y ~ poly(x,2), se=FALSE) +\n  #geom_smooth( se=FALSE) +\n  facet_wrap(gender~.) +\n  guides(color = \"none\")\n\n\n\n\n\nQuiz 2,\n\nThe Education level may affect the relationship between hdi and economic loss status. please draw following plot, and find the most vulnerable population."
  },
  {
    "objectID": "380_wave_plot.html",
    "href": "380_wave_plot.html",
    "title": "13  웨이브 형테의 시각화",
    "section": "",
    "text": "13.0.1 Data Visualization example (EEG data)\nIn public health, another most common used data is bio-signal data. Bio-signal data usually used in medical research, but recently bio-log signals are widely used in public health beyond medical setting. Now I present some example of data visualization using bio-signal data from EEG.\n\n\n13.0.2 Introduction\nEEG refers to the signal of the brain’s electrical activty. Electrodes are placed on the scalp, and each electrodes recorded brain’s activity. EEG is one of the most common methods to support diagnosis of brain diseases such as epilepsy, sleep disorder and even brain death. Furthermore, we can get usufull understand how brain activity correlated to various neurological activity. So, I tried to anaysis EEG signal and hope to predict eye opening status.\nThe data include information of row_n, AF3, F7, F3, FC5, T7,P7, O1, O2, P8, T8, FC6, F4, F8, AF4, and eyeDetection. Eye Detection is outcome variable data Open or Closed. Others numeric variable about activity of each electrodes. Each electro-nodes place on scalp, and represent area of particular location on brain, as below.\n\nrm(list=ls())\nurl <- \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/21_electrodes_of_International_10-20_system_for_EEG.svg/1024px-21_electrodes_of_International_10-20_system_for_EEG.svg.png\"\ndownload.file(url, 'img/eegpng.png')\n\n\n\n\neeg electrodes from wiki\n\n\n\n\n13.0.3 Dataset and Data step\n\n13.0.3.1 Data download and handling\nThe data set locate here, https://archive.ics.uci.edu/ml/machine-learning-databases/00264/EEG%20Eye%20State.arff. The data was stored into my computer, as name of ‘dl_eeg.txt’ in `data’ folder.\n\nurl ='https://archive.ics.uci.edu/ml/machine-learning-databases/00264/EEG%20Eye%20State.arff'\ndownload.file(url, 'data/dl_eeg.txt')\n\nTo start the data step, some packages should be loaded.\n\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif(!require(\"htmlTable\")) install.packages(\"htmlTable\")\nif(!require(\"broom\")) install.packages(\"broom\")\nif(!require(\"ggthemes\")) install.packages(\"ggthemes\")\n# packages from github\nif(!require(\"devtools\")) install.packages(\"devtools\")\nlibrary(devtools)\n#install_github(\"jinhaslab/tabf\", force = TRUE)\nlibrary(tabf)\n#library(caret)\nlibrary(knitr)\nlibrary(kableExtra)\n#library(doMC)\n\nscan the data and create DB for analysis\n\nmm <- scan('data/dl_eeg.txt', what=\"\", sep=\"\")\nwhich(mm == '@DATA')\n\n[1] 48\n\ndat<-mm[-c(1:48)]\nbook <- mm[1:48]\nbook[-c(1:2, 48)] %>% \n  matrix(., ncol=3, byrow=TRUE) %>% \n  .[,2] -> col_names\ncol_names\n\n [1] \"AF3\"          \"F7\"           \"F3\"           \"FC5\"          \"T7\"          \n [6] \"P7\"           \"O1\"           \"O2\"           \"P8\"           \"T8\"          \n[11] \"FC6\"          \"F4\"           \"F8\"           \"AF4\"          \"eyeDetection\"\n\n\nthe tibble form is easy to hand or transforming. So, I change the data form to tibble style.\n\ntibble(wave =dat) %>%\n  mutate (val = strsplit(wave, \",\"), row_n=row_number()) %>% \n  unnest (cols=c(val)) %>% \n  select (-wave) %>%\n  mutate (val = as.numeric(val)) %>%\n  group_by(row_n)  %>%\n  mutate (wave_colname = col_names) %>% \n  ungroup() %>%\n  pivot_wider(names_from = wave_colname, values_from = val)%>%\n  select (row_n, all_of(col_names)) %>%\n  arrange (row_n) -> \n  eeg\n\nI check the class of all variable.\n\nnames(eeg)\n\n [1] \"row_n\"        \"AF3\"          \"F7\"           \"F3\"           \"FC5\"         \n [6] \"T7\"           \"P7\"           \"O1\"           \"O2\"           \"P8\"          \n[11] \"T8\"           \"FC6\"          \"F4\"           \"F8\"           \"AF4\"         \n[16] \"eyeDetection\"\n\nsapply(eeg, mode)\n\n       row_n          AF3           F7           F3          FC5           T7 \n   \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\" \n          P7           O1           O2           P8           T8          FC6 \n   \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\" \n          F4           F8          AF4 eyeDetection \n   \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\" \n\n\nThis data were measure for 117 seconds, I create sec variable to represent measurement time. I create facotor variable for eye opening status `Eye’, as below.\n\neeg <- eeg %>% \n  mutate(Eye = ifelse(eyeDetection ==1, 'open', 'closed')) %>%\n  mutate(sec = seq(0, 117, length.out = nrow(.)))\n\nFor data step, the long form data were created via pivot_longer function. the key represent each electrode, and the activity were stored into activity variable. EyeDetection, row_n, sec, Eye will be indentical variable for each electrode activity.\n\neeg %>% \n  pivot_longer(-c(eyeDetection, row_n, sec, Eye),\n    names_to = 'electrode', \n               values_to= 'activity') ->\n  eegl\neegl %>% head()\n\n# A tibble: 6 × 6\n  row_n eyeDetection Eye      sec electrode activity\n  <int>        <dbl> <chr>  <dbl> <chr>        <dbl>\n1     1            0 closed     0 AF3          4329.\n2     1            0 closed     0 F7           4009.\n3     1            0 closed     0 F3           4289.\n4     1            0 closed     0 FC5          4148.\n5     1            0 closed     0 T7           4350.\n6     1            0 closed     0 P7           4586.\n\n\n\n\n13.0.3.2 data explorer\n\n13.0.3.2.1 heatmap\nThe heatmap can show overview the time course about eye opening status. Dark blue indicate closed status, and light blue indicate eye open status.\n\neegl %>%\n  ggplot(aes(x = sec, y = 0.5, fill = eyeDetection)) +\n  geom_tile() +\n  scale_fill_continuous(name = \"Eye status\", \n                        limits = c(0, 1), \n                        labels = c('closed','open'), \n                        breaks = c(0, 1)) +\n  theme_classic() +\n  scale_y_continuous(breaks = c(0,  1), 'Eye status') +\n  scale_x_continuous(breaks = c(0, 30, 60, 90, 117)) +\n  theme(aspect.ratio=1/7)\n\n\n\n\n\n\n13.0.3.2.2 waveform\nThe activity waves are plotting for data explorer.\n\neegl %>% \n  ggplot(aes(x = row_n, y = activity, color = Eye)) +\n  geom_line(size = c(1)) +\n  geom_point(alpha = 1)+\n  facet_grid(electrode ~. ) +\n  theme_classic() \n\n\n\n\nThere are much of outlier, so the fluctuation of each node’s activity atteunted. So We needed to exclude outlier. To ensure the outlier status, I plot the boxplot, as below. The boxplot also suggested that there were much of outlier effect.\n\neegl %>% \n  ggplot(aes(x = electrode, y = activity, color = Eye)) +\n  geom_boxplot() +\n  scale_y_continuous(trans='log2') +\n  theme_classic()\n\n\n\n\nAlthoug there are outlier effect on data, but I just want to check the t-test results.\n\nttest<- eegl %>% select(-eyeDetection, -row_n) %>%\n  group_by(electrode)  %>%\n  nest() %>% \n  mutate(stats     = map(data, ~t.test(activity ~ Eye, data=.x)), \n         summarise = map(stats, broom::glance))  %>%\n  select(electrode, summarise) %>%\n  unnest(summarise) \nttest %>% \n  mutate_if(is.numeric, round, 2) %>% \n  mutate(p.values = ifelse(p.value <0.01, '<0.01', as.character(p.value))) %>%\n  select(electrode,`difference` = estimate, 'open' = estimate1, 'closed' =  estimate2, p.values) %>%\n  htmlTable(\n    cgroup=c(\"\", \"Eye status\", \"\"), \n    n.cgroup=c(2, 2, 1), \n    caption = \"Table1. t-test result without outlier cleaning\", \n    align = 'llrc'\n  )\n\n\n\n\n\nTable1. t-test result without outlier cleaning\n\n\n \nEye status \n\n\n\nelectrode\ndifference \n \nopen\nclosed \n \np.values\n\n\n\n\n1\nAF3\n-52.4 \n \n4298.4\n4350.8 \n \n0.25\n\n\n2\nF7\n7.39 \n \n4013.08\n4005.69 \n \n<0.01\n\n\n3\nF3\n-3.47 \n \n4262.46\n4265.94 \n \n<0.01\n\n\n4\nFC5\n78.98 \n \n4200.39\n4121.41 \n \n0.31\n\n\n5\nT7\n0.03 \n \n4341.75\n4341.73 \n \n0.96\n\n\n6\nP7\n46.13 \n \n4664.73\n4618.59 \n \n0.29\n\n\n7\nO1\n66.82 \n \n4140.39\n4073.57 \n \n0.33\n\n\n8\nO2\n-1.48 \n \n4615.39\n4616.87 \n \n<0.01\n\n\n9\nP8\n-41.13 \n \n4200.37\n4241.5 \n \n0.29\n\n\n10\nT8\n-3.61 \n \n4229.7\n4233.31 \n \n<0.01\n\n\n11\nFC6\n-4.88 \n \n4200.26\n4205.15 \n \n<0.01\n\n\n12\nF4\n-4.01 \n \n4277.43\n4281.44 \n \n<0.01\n\n\n13\nF8\n-31.88 \n \n4600.9\n4632.77 \n \n0.15\n\n\n14\nAF4\n89.42 \n \n4456.57\n4367.15 \n \n0.31\n\n\n\n\n\n\n\n\n13.0.3.3 data cleaning for outlier\nThe visualization of interquartile range is useful for detecting the presenting of outliers. Outliers are individual values that fall outside of the overall pattern of a data set. So, the outlier can be define when they are far way as several times of interquarile range from median. I made scale_median function to detect outlier. there are several step to make function. first, calculate the interquartile range. The differece between median and value divided by inter quartile range, and the absolute value will be Z-score. That z-score represent that how many times of interquartile range far from median. I used score of 2.5 times par form median for detect outlier.\n\nscale_median <- function(x){\n    Q1  <- quantile(x, 0.25)\n    Q3  <- quantile(x, 0.75)\n    iqr <- c(Q3 - Q1)\n  ifelse(x < median(x),(x - Q1)/iqr*-1,(x - Q3)/iqr*1 )\n}\neegl1<- \n  eegl %>% \n  group_by(electrode) %>%\n  nest() %>%\n  mutate(Zscores = map (data, ~scale_median(.$activity))) %>% \n  unnest(cols = c(data, Zscores))  %>%\n  filter(Zscores < 2.5) #Outlier is Zscores > 2.5 or <-2.5\n\nI check box-plot without outlier. That plot sounds good for me. So, I can generate wave form plot.\n\neegl1 %>%\n  ggplot(aes(x = electrode, y = activity, color = Eye)) +\n  geom_boxplot() \n\n\n\n\nHere, I plot wave form of each electrodes’ activity. Before generate the wave plot, I want increase the working cores.\n\nlibrary('doMC')\nlibrary(parallel)\ngetDoParWorkers()\n\n[1] 1\n\nnumber_of_cores <- detectCores()\n\nMy computer use only 1 core, so I increase number of cores working up-to 46 cores.\n\nregisterDoMC(cores = number_of_cores - 2)\ngetDoParWorkers()\n\n[1] 46\n\n\nThen, I want plot wave form.\n\neegl1 %>% \n  ggplot(aes(x = sec, y = activity, fill = eyeDetection)) +\n  geom_point(size = 0.1, alpha =0.5) +\n  geom_line(aes(color = eyeDetection), show.legend = F) +\n  facet_grid(electrode ~., scales = \"free\" ) +\n  theme_classic() +\n  scale_fill_continuous(name = \"Eye status\", limits = c(0, 1), \n                        labels = c('close', 'open'), breaks = c(0, 1)) +\n  xlab('Time series') +\n  scale_x_continuous(breaks = c(0, 30, 60, 90, 117))"
  }
]